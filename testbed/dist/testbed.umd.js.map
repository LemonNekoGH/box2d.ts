{"version":3,"file":"testbed.umd.js","sources":["../settings.ts","../draw.ts","../fullscreen_ui.ts","../particle_emitter.ts","../particle_parameter.ts","../test.ts","../tests/box_stack.ts","../main.ts"],"sourcesContent":["// MIT License\r\n\r\n// Copyright (c) 2019 Erin Catto\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\nimport * as b2 from \"@box2d\";\r\n\r\nexport class Settings {\r\n  public m_testIndex: number = 0;\r\n  public m_windowWidth: number = 1600;\r\n  public m_windowHeight: number = 900;\r\n  public m_hertz: number = 60;\r\n  public m_velocityIterations: number = 8;\r\n  public m_positionIterations: number = 3;\r\n  // #if B2_ENABLE_PARTICLE\r\n  // Particle iterations are needed for numerical stability in particle\r\n  // simulations with small particles and relatively high gravity.\r\n  // b2CalculateParticleIterations helps to determine the number.\r\n  public m_particleIterations: number = b2.CalculateParticleIterations(10, 0.04, 1 / this.m_hertz);\r\n  // #endif\r\n  public m_drawShapes: boolean = true;\r\n  // #if B2_ENABLE_PARTICLE\r\n  public m_drawParticles: boolean = true;\r\n  // #endif\r\n  public m_drawJoints: boolean = true;\r\n  public m_drawAABBs: boolean = false;\r\n  public m_drawContactPoints: boolean = false;\r\n  public m_drawContactNormals: boolean = false;\r\n  public m_drawContactImpulse: boolean = false;\r\n  public m_drawFrictionImpulse: boolean = false;\r\n  public m_drawCOMs: boolean = false;\r\n  public m_drawControllers: boolean = true;\r\n  public m_drawStats: boolean = false;\r\n  public m_drawProfile: boolean = false;\r\n  public m_enableWarmStarting: boolean = true;\r\n  public m_enableContinuous: boolean = true;\r\n  public m_enableSubStepping: boolean = false;\r\n  public m_enableSleep: boolean = true;\r\n  public m_pause: boolean = false;\r\n  public m_singleStep: boolean = false;\r\n  // #if B2_ENABLE_PARTICLE\r\n  public m_strictContacts: boolean = false;\r\n  // #endif\r\n\r\n  public Reset(): void {\r\n    this.m_testIndex = 0;\r\n    this.m_windowWidth = 1600;\r\n    this.m_windowHeight = 900;\r\n    this.m_hertz = 60;\r\n    this.m_velocityIterations = 8;\r\n    this.m_positionIterations = 3;\r\n    // #if B2_ENABLE_PARTICLE\r\n    // Particle iterations are needed for numerical stability in particle\r\n    // simulations with small particles and relatively high gravity.\r\n    // b2CalculateParticleIterations helps to determine the number.\r\n    this.m_particleIterations = b2.CalculateParticleIterations(10, 0.04, 1 / this.m_hertz);\r\n    // #endif\r\n    this.m_drawShapes = true;\r\n    // #if B2_ENABLE_PARTICLE\r\n    this.m_drawParticles = true;\r\n    // #endif\r\n    this.m_drawJoints = true;\r\n    this.m_drawAABBs = false;\r\n    this.m_drawContactPoints = false;\r\n    this.m_drawContactNormals = false;\r\n    this.m_drawContactImpulse = false;\r\n    this.m_drawFrictionImpulse = false;\r\n    this.m_drawCOMs = false;\r\n    // #if B2_ENABLE_CONTROLLER\r\n    this.m_drawControllers = true;\r\n    // #endif\r\n    this.m_drawStats = false;\r\n    this.m_drawProfile = false;\r\n    this.m_enableWarmStarting = true;\r\n    this.m_enableContinuous = true;\r\n    this.m_enableSubStepping = false;\r\n    this.m_enableSleep = true;\r\n    this.m_pause = false;\r\n    this.m_singleStep = false;\r\n    // #if B2_ENABLE_PARTICLE\r\n    this.m_strictContacts = false;\r\n    // #endif\r\n  }\r\n\r\n  public Save(): void { }\r\n  public Load(): void { }\r\n}\r\n","// MIT License\r\n\r\n// Copyright (c) 2019 Erin Catto\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\nimport * as b2 from \"@box2d\";\r\n\r\nexport class Camera {\r\n  public readonly m_center: b2.Vec2 = new b2.Vec2(0, 20);\r\n  ///public readonly m_roll: b2.Rot = new b2.Rot(b2.DegToRad(0));\r\n  public m_extent: number = 25;\r\n  public m_zoom: number = 1;\r\n  public m_width: number = 1280;\r\n  public m_height: number = 800;\r\n\r\n  public ConvertScreenToWorld(screenPoint: b2.Vec2, out: b2.Vec2): b2.Vec2 {\r\n    return this.ConvertElementToWorld(screenPoint, out);\r\n  }\r\n\r\n  public ConvertWorldToScreen(worldPoint: b2.Vec2, out: b2.Vec2): b2.Vec2 {\r\n    return this.ConvertWorldToElement(worldPoint, out);\r\n  }\r\n\r\n  public ConvertViewportToElement(viewport: b2.Vec2, out: b2.Vec2): b2.Vec2 {\r\n    // 0,0 at center of canvas, x right and y up\r\n    const element_x: number = viewport.x + (0.5 * this.m_width);\r\n    const element_y: number = (0.5 * this.m_height) - viewport.y;\r\n    return out.Set(element_x, element_y);\r\n  }\r\n\r\n  public ConvertElementToViewport(element: b2.Vec2, out: b2.Vec2): b2.Vec2 {\r\n    // 0,0 at center of canvas, x right and y up\r\n    const viewport_x: number = element.x - (0.5 * this.m_width);\r\n    const viewport_y: number = (0.5 * this.m_height) - element.y;\r\n    return out.Set(viewport_x, viewport_y);\r\n  }\r\n\r\n  public ConvertProjectionToViewport(projection: b2.Vec2, out: b2.Vec2): b2.Vec2 {\r\n    const viewport: b2.Vec2 = out.Copy(projection);\r\n    b2.Vec2.MulSV(1 / this.m_zoom, viewport, viewport);\r\n    ///b2.Vec2.MulSV(this.m_extent, viewport, viewport);\r\n    b2.Vec2.MulSV(0.5 * this.m_height / this.m_extent, projection, projection);\r\n    return viewport;\r\n  }\r\n\r\n  public ConvertViewportToProjection(viewport: b2.Vec2, out: b2.Vec2): b2.Vec2 {\r\n    const projection: b2.Vec2 = out.Copy(viewport);\r\n    ///b2.Vec2.MulSV(1 / this.m_extent, projection, projection);\r\n    b2.Vec2.MulSV(2 * this.m_extent / this.m_height, projection, projection);\r\n    b2.Vec2.MulSV(this.m_zoom, projection, projection);\r\n    return projection;\r\n  }\r\n\r\n  public ConvertWorldToProjection(world: b2.Vec2, out: b2.Vec2): b2.Vec2 {\r\n    const projection: b2.Vec2 = out.Copy(world);\r\n    b2.Vec2.SubVV(projection, this.m_center, projection);\r\n    ///b2.Rot.MulTRV(this.m_roll, projection, projection);\r\n    return projection;\r\n  }\r\n\r\n  public ConvertProjectionToWorld(projection: b2.Vec2, out: b2.Vec2): b2.Vec2 {\r\n    const world: b2.Vec2 = out.Copy(projection);\r\n    ///b2.Rot.MulRV(this.m_roll, world, world);\r\n    b2.Vec2.AddVV(this.m_center, world, world);\r\n    return world;\r\n  }\r\n\r\n  public ConvertElementToWorld(element: b2.Vec2, out: b2.Vec2): b2.Vec2 {\r\n    const viewport: b2.Vec2 = this.ConvertElementToViewport(element, out);\r\n    const projection: b2.Vec2 = this.ConvertViewportToProjection(viewport, out);\r\n    return this.ConvertProjectionToWorld(projection, out);\r\n  }\r\n\r\n  public ConvertWorldToElement(world: b2.Vec2, out: b2.Vec2): b2.Vec2 {\r\n    const projection: b2.Vec2 = this.ConvertWorldToProjection(world, out);\r\n    const viewport: b2.Vec2 = this.ConvertProjectionToViewport(projection, out);\r\n    return this.ConvertViewportToElement(viewport, out);\r\n  }\r\n\r\n  public ConvertElementToProjection(element: b2.Vec2, out: b2.Vec2): b2.Vec2 {\r\n    const viewport: b2.Vec2 = this.ConvertElementToViewport(element, out);\r\n    return this.ConvertViewportToProjection(viewport, out);\r\n  }\r\n}\r\n\r\n// This class implements debug drawing callbacks that are invoked\r\n// inside b2World::Step.\r\nexport class DebugDraw extends b2.Draw {\r\n  public m_ctx: CanvasRenderingContext2D | null = null;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public PushTransform(xf: b2.Transform): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.save();\r\n      ctx.translate(xf.p.x, xf.p.y);\r\n      ctx.rotate(xf.q.GetAngle());\r\n    }\r\n  }\r\n\r\n  public PopTransform(xf: b2.Transform): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  public DrawPolygon(vertices: b2.Vec2[], vertexCount: number, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(vertices[0].x, vertices[0].y);\r\n      for (let i: number = 1; i < vertexCount; i++) {\r\n        ctx.lineTo(vertices[i].x, vertices[i].y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.strokeStyle = color.MakeStyleString(1);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  public DrawSolidPolygon(vertices: b2.Vec2[], vertexCount: number, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(vertices[0].x, vertices[0].y);\r\n      for (let i: number = 1; i < vertexCount; i++) {\r\n        ctx.lineTo(vertices[i].x, vertices[i].y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.fillStyle = color.MakeStyleString(0.5);\r\n      ctx.fill();\r\n      ctx.strokeStyle = color.MakeStyleString(1);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  public DrawCircle(center: b2.Vec2, radius: number, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.beginPath();\r\n      ctx.arc(center.x, center.y, radius, 0, b2.pi * 2, true);\r\n      ctx.strokeStyle = color.MakeStyleString(1);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  public DrawSolidCircle(center: b2.Vec2, radius: number, axis: b2.Vec2, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      const cx: number = center.x;\r\n      const cy: number = center.y;\r\n      ctx.beginPath();\r\n      ctx.arc(cx, cy, radius, 0, b2.pi * 2, true);\r\n      ctx.moveTo(cx, cy);\r\n      ctx.lineTo((cx + axis.x * radius), (cy + axis.y * radius));\r\n      ctx.fillStyle = color.MakeStyleString(0.5);\r\n      ctx.fill();\r\n      ctx.strokeStyle = color.MakeStyleString(1);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  // #if B2_ENABLE_PARTICLE\r\n  public DrawParticles(centers: b2.Vec2[], radius: number, colors: b2.Color[] | null, count: number) {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      if (colors !== null) {\r\n        for (let i = 0; i < count; ++i) {\r\n          const center = centers[i];\r\n          const color = colors[i];\r\n          ctx.fillStyle = color.MakeStyleString();\r\n          // ctx.fillRect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\r\n          ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, b2.pi * 2, true); ctx.fill();\r\n        }\r\n      } else {\r\n        ctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n        // ctx.beginPath();\r\n        for (let i = 0; i < count; ++i) {\r\n          const center = centers[i];\r\n          // ctx.rect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\r\n          ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, b2.pi * 2, true); ctx.fill();\r\n        }\r\n        // ctx.fill();\r\n      }\r\n    }\r\n  }\r\n  // #endif\r\n\r\n  public DrawSegment(p1: b2.Vec2, p2: b2.Vec2, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.strokeStyle = color.MakeStyleString(1);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  public DrawTransform(xf: b2.Transform): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      this.PushTransform(xf);\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, 0);\r\n      ctx.lineTo(1, 0);\r\n      ctx.strokeStyle = b2.Color.RED.MakeStyleString(1);\r\n      ctx.stroke();\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, 0);\r\n      ctx.lineTo(0, 1);\r\n      ctx.strokeStyle = b2.Color.GREEN.MakeStyleString(1);\r\n      ctx.stroke();\r\n\r\n      this.PopTransform(xf);\r\n    }\r\n  }\r\n\r\n  public DrawPoint(p: b2.Vec2, size: number, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.fillStyle = color.MakeStyleString();\r\n      size *= g_camera.m_zoom;\r\n      size /= g_camera.m_extent;\r\n      const hsize: number = size / 2;\r\n      ctx.fillRect(p.x - hsize, p.y - hsize, size, size);\r\n    }\r\n  }\r\n\r\n  private static DrawString_s_color: b2.Color = new b2.Color(0.9, 0.6, 0.6);\r\n  public DrawString(x: number, y: number, message: string): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.save();\r\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n      ctx.font = \"15px DroidSans\";\r\n      const color: b2.Color = DebugDraw.DrawString_s_color;\r\n      ctx.fillStyle = color.MakeStyleString();\r\n      ctx.fillText(message, x, y);\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  private static DrawStringWorld_s_p: b2.Vec2 = new b2.Vec2();\r\n  private static DrawStringWorld_s_cc: b2.Vec2 = new b2.Vec2();\r\n  private static DrawStringWorld_s_color: b2.Color = new b2.Color(0.5, 0.9, 0.5);\r\n  public DrawStringWorld(x: number, y: number, message: string): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      const p: b2.Vec2 = DebugDraw.DrawStringWorld_s_p.Set(x, y);\r\n\r\n      // world -> viewport\r\n      const vt: b2.Vec2 = g_camera.m_center;\r\n      b2.Vec2.SubVV(p, vt, p);\r\n      ///const vr = g_camera.m_roll;\r\n      ///b2.Rot.MulTRV(vr, p, p);\r\n      const vs: number = g_camera.m_zoom;\r\n      b2.Vec2.MulSV(1 / vs, p, p);\r\n\r\n      // viewport -> canvas\r\n      const cs: number = 0.5 * g_camera.m_height / g_camera.m_extent;\r\n      b2.Vec2.MulSV(cs, p, p);\r\n      p.y *= -1;\r\n      const cc: b2.Vec2 = DebugDraw.DrawStringWorld_s_cc.Set(0.5 * ctx.canvas.width, 0.5 * ctx.canvas.height);\r\n      b2.Vec2.AddVV(p, cc, p);\r\n\r\n      ctx.save();\r\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n      ctx.font = \"15px DroidSans\";\r\n      const color: b2.Color = DebugDraw.DrawStringWorld_s_color;\r\n      ctx.fillStyle = color.MakeStyleString();\r\n      ctx.fillText(message, p.x, p.y);\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  public DrawAABB(aabb: b2.AABB, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.strokeStyle = color.MakeStyleString();\r\n      const x: number = aabb.lowerBound.x;\r\n      const y: number = aabb.lowerBound.y;\r\n      const w: number = aabb.upperBound.x - aabb.lowerBound.x;\r\n      const h: number = aabb.upperBound.y - aabb.lowerBound.y;\r\n      ctx.strokeRect(x, y, w, h);\r\n    }\r\n  }\r\n}\r\n\r\nexport const g_debugDraw: DebugDraw = new DebugDraw();\r\nexport const g_camera: Camera = new Camera();\r\n","/*\r\n * Copyright (c) 2014 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n\r\n// #if B2_ENABLE_PARTICLE\r\n\r\n/**\r\n * Handles drawing and selection of full screen UI.\r\n */\r\nexport class FullScreenUI {\r\n  constructor() {\r\n    this.Reset();\r\n  }\r\n\r\n  /**\r\n   * Whether particle parameters are enabled.\r\n   */\r\n  public m_particleParameterSelectionEnabled: boolean = false;\r\n\r\n  /**\r\n   * Reset the UI to it's initial state.\r\n   */\r\n  public Reset(): void {\r\n    this.m_particleParameterSelectionEnabled = false;\r\n  }\r\n\r\n  /**\r\n   * Enable / disable particle parameter selection.\r\n   */\r\n  public SetParticleParameterSelectionEnabled(enable: boolean): void {\r\n    this.m_particleParameterSelectionEnabled = enable;\r\n  }\r\n\r\n  /**\r\n   * Get whether particle parameter selection is enabled.\r\n   */\r\n  public GetParticleParameterSelectionEnabled(): boolean {\r\n    return this.m_particleParameterSelectionEnabled;\r\n  }\r\n}\r\n\r\n// #endif\r\n","/*\r\n * Copyright (c) 2014 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n\r\n// #if B2_ENABLE_PARTICLE\r\n\r\nimport * as b2 from \"@box2d\";\r\n\r\nexport class EmittedParticleCallback {\r\n  /**\r\n   * Called for each created particle.\r\n   */\r\n  public ParticleCreated(system: b2.ParticleSystem, particleIndex: number): void {}\r\n}\r\n\r\n/**\r\n * Emit particles from a circular region.\r\n */\r\nexport class RadialEmitter {\r\n  /**\r\n   * Pointer to global world\r\n   */\r\n  public m_particleSystem: b2.ParticleSystem | null = null;\r\n  /**\r\n   * Called for each created particle.\r\n   */\r\n  public m_callback: EmittedParticleCallback | null = null;\r\n  /**\r\n   * Center of particle emitter\r\n   */\r\n  public m_origin: b2.Vec2 = new b2.Vec2();\r\n  /**\r\n   * Launch direction.\r\n   */\r\n  public m_startingVelocity: b2.Vec2 = new b2.Vec2();\r\n  /**\r\n   * Speed particles are emitted\r\n   */\r\n  public m_speed = 0.0;\r\n  /**\r\n   * Half width / height of particle emitter\r\n   */\r\n  public m_halfSize: b2.Vec2 = new b2.Vec2();\r\n  /**\r\n   * Particles per second\r\n   */\r\n  public m_emitRate = 1.0;\r\n  /**\r\n   * Initial color of particle emitted.\r\n   */\r\n  public m_color: b2.Color = new b2.Color();\r\n  /**\r\n   * Number particles to emit on the next frame\r\n   */\r\n  public m_emitRemainder = 0.0;\r\n  /**\r\n   * Flags for created particles, see b2ParticleFlag.\r\n   */\r\n  public m_flags: b2.ParticleFlag = b2.ParticleFlag.b2_waterParticle;\r\n  /**\r\n   * Group to put newly created particles in.\r\n   */\r\n  public m_group: b2.ParticleGroup | null = null;\r\n\r\n  /**\r\n   * Calculate a random number 0.0..1.0.\r\n   */\r\n  public static Random(): number {\r\n    return Math.random();\r\n  }\r\n\r\n  public __dtor__(): void {\r\n    this.SetGroup(null);\r\n  }\r\n\r\n  /**\r\n   * Set the center of the emitter.\r\n   */\r\n  public SetPosition(origin: b2.Vec2): void {\r\n    this.m_origin.Copy(origin);\r\n  }\r\n\r\n  /**\r\n   * Get the center of the emitter.\r\n   */\r\n  public GetPosition(out: b2.Vec2): b2.Vec2 {\r\n    return out.Copy(this.m_origin);\r\n  }\r\n\r\n  /**\r\n   * Set the size of the circle which emits particles.\r\n   */\r\n  public SetSize(size: b2.Vec2): void {\r\n    this.m_halfSize.Copy(size).SelfMul(0.5);\r\n  }\r\n\r\n  /**\r\n   * Get the size of the circle which emits particles.\r\n   */\r\n  public GetSize(out: b2.Vec2): b2.Vec2 {\r\n    return out.Copy(this.m_halfSize).SelfMul(2.0);\r\n  }\r\n\r\n  /**\r\n   * Set the starting velocity of emitted particles.\r\n   */\r\n  public SetVelocity(velocity: b2.Vec2): void {\r\n    this.m_startingVelocity.Copy(velocity);\r\n  }\r\n\r\n  /**\r\n   * Get the starting velocity.\r\n   */\r\n  public GetVelocity(out: b2.Vec2): b2.Vec2 {\r\n    return out.Copy(this.m_startingVelocity);\r\n  }\r\n\r\n  /**\r\n   * Set the speed of particles along the direction from the\r\n   * center of the emitter.\r\n   */\r\n  public SetSpeed(speed: number): void {\r\n    this.m_speed = speed;\r\n  }\r\n\r\n  /**\r\n   * Get the speed of particles along the direction from the\r\n   * center of the emitter.\r\n   */\r\n  public GetSpeed(): number {\r\n    return this.m_speed;\r\n  }\r\n\r\n  /**\r\n   * Set the flags for created particles.\r\n   */\r\n  public SetParticleFlags(flags: b2.ParticleFlag): void {\r\n    this.m_flags = flags;\r\n  }\r\n\r\n  /**\r\n   * Get the flags for created particles.\r\n   */\r\n  public GetParticleFlags(): b2.ParticleFlag {\r\n    return this.m_flags;\r\n  }\r\n\r\n  /**\r\n   * Set the color of particles.\r\n   */\r\n  public SetColor(color: b2.Color): void {\r\n    this.m_color.Copy(color);\r\n  }\r\n\r\n  /**\r\n   * Get the color of particles emitter.\r\n   */\r\n  public GetColor(out: b2.Color): b2.Color {\r\n    return out.Copy(this.m_color);\r\n  }\r\n\r\n  /**\r\n   * Set the emit rate in particles per second.\r\n   */\r\n  public SetEmitRate(emitRate: number): void {\r\n    this.m_emitRate = emitRate;\r\n  }\r\n\r\n  /**\r\n   * Get the current emit rate.\r\n   */\r\n  public GetEmitRate(): number {\r\n    return this.m_emitRate;\r\n  }\r\n\r\n  /**\r\n   * Set the particle system this emitter is adding particles to.\r\n   */\r\n  public SetParticleSystem(particleSystem: b2.ParticleSystem): void {\r\n    this.m_particleSystem = particleSystem;\r\n  }\r\n\r\n  /**\r\n   * Get the particle system this emitter is adding particle to.\r\n   */\r\n  public GetParticleSystem(): b2.ParticleSystem | null {\r\n    return this.m_particleSystem;\r\n  }\r\n\r\n  /**\r\n   * Set the callback that is called on the creation of each\r\n   * particle.\r\n   */\r\n  public SetCallback(callback: EmittedParticleCallback): void {\r\n    this.m_callback = callback;\r\n  }\r\n\r\n  /**\r\n   * Get the callback that is called on the creation of each\r\n   * particle.\r\n   */\r\n  public GetCallback(): EmittedParticleCallback | null {\r\n    return this.m_callback;\r\n  }\r\n\r\n  /**\r\n   * This class sets the group flags to b2_particleGroupCanBeEmpty\r\n   * so that it isn't destroyed and clears the\r\n   * b2_particleGroupCanBeEmpty on the group when the emitter no\r\n   * longer references it so that the group can potentially be\r\n   * cleaned up.\r\n   */\r\n  public SetGroup(group: b2.ParticleGroup | null): void {\r\n    if (this.m_group) {\r\n      this.m_group.SetGroupFlags(this.m_group.GetGroupFlags() & ~b2.ParticleGroupFlag.b2_particleGroupCanBeEmpty);\r\n    }\r\n    this.m_group = group;\r\n    if (this.m_group) {\r\n      this.m_group.SetGroupFlags(this.m_group.GetGroupFlags() | b2.ParticleGroupFlag.b2_particleGroupCanBeEmpty);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the group particles should be created within.\r\n   */\r\n  public GetGroup(): b2.ParticleGroup | null {\r\n    return this.m_group;\r\n  }\r\n\r\n  /**\r\n   * dt is seconds that have passed, particleIndices is an\r\n   * optional pointer to an array which tracks which particles\r\n   * have been created and particleIndicesCount is the size of the\r\n   * particleIndices array. This function returns the number of\r\n   * particles created during this simulation step.\r\n   */\r\n  public Step(dt: number, particleIndices?: number[], particleIndicesCount: number = particleIndices ? particleIndices.length : 0): number {\r\n    if (this.m_particleSystem === null) { throw new Error(); }\r\n    let numberOfParticlesCreated = 0;\r\n    // How many (fractional) particles should we have emitted this frame?\r\n    this.m_emitRemainder += this.m_emitRate * dt;\r\n\r\n    const pd = new b2.ParticleDef();\r\n    pd.color.Copy(this.m_color);\r\n    pd.flags = this.m_flags;\r\n    pd.group = this.m_group;\r\n\r\n    // Keep emitting particles on this frame until we only have a\r\n    // fractional particle left.\r\n    while (this.m_emitRemainder > 1.0) {\r\n      this.m_emitRemainder -= 1.0;\r\n\r\n      // Randomly pick a position within the emitter's radius.\r\n      const angle = RadialEmitter.Random() * 2.0 * b2.pi;\r\n      // Distance from the center of the circle.\r\n      const distance = RadialEmitter.Random();\r\n      const positionOnUnitCircle = new b2.Vec2(Math.sin(angle), Math.cos(angle));\r\n\r\n      // Initial position.\r\n      pd.position.Set(\r\n        this.m_origin.x + positionOnUnitCircle.x * distance * this.m_halfSize.x,\r\n        this.m_origin.y + positionOnUnitCircle.y * distance * this.m_halfSize.y);\r\n      // Send it flying\r\n      pd.velocity.Copy(this.m_startingVelocity);\r\n      if (this.m_speed !== 0.0) {\r\n        ///  pd.velocity += positionOnUnitCircle * m_speed;\r\n        pd.velocity.SelfMulAdd(this.m_speed, positionOnUnitCircle);\r\n      }\r\n\r\n      const particleIndex = this.m_particleSystem.CreateParticle(pd);\r\n      if (this.m_callback) {\r\n        this.m_callback.ParticleCreated(this.m_particleSystem, particleIndex);\r\n      }\r\n      if (particleIndices && (numberOfParticlesCreated < particleIndicesCount)) {\r\n        particleIndices[numberOfParticlesCreated] = particleIndex;\r\n      }\r\n      ++numberOfParticlesCreated;\r\n    }\r\n    return numberOfParticlesCreated;\r\n  }\r\n}\r\n\r\n// #endif\r\n","/*\r\n * Copyright (c) 2014 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n\r\n// #if B2_ENABLE_PARTICLE\r\n\r\nimport * as b2 from \"@box2d\";\r\n\r\nexport enum ParticleParameterOptions {\r\n  OptionStrictContacts = 1 << 0,\r\n  OptionDrawShapes = 1 << 1,\r\n  OptionDrawParticles = 1 << 2,\r\n  OptionDrawJoints = 1 << 3,\r\n  OptionDrawAABBs = 1 << 4,\r\n  OptionDrawContactPoints = 1 << 5,\r\n  OptionDrawContactNormals = 1 << 6,\r\n  OptionDrawContactImpulse = 1 << 7,\r\n  OptionDrawFrictionImpulse = 1 << 8,\r\n  OptionDrawCOMs = 1 << 9,\r\n  OptionDrawStats = 1 << 10,\r\n  OptionDrawProfile = 1 << 11,\r\n}\r\n\r\nexport class ParticleParameterValue {\r\n  /**\r\n   * ParticleParameterValue of a particle parameter.\r\n   */\r\n  constructor(value: ParticleParameterValue);\r\n  constructor(value: number, options: ParticleParameterOptions, name: string);\r\n  constructor(...args: any[]) {\r\n    if (args[0] instanceof ParticleParameterValue) {\r\n      this.Copy(args[0]);\r\n    } else {\r\n      this.value = args[0];\r\n      this.options = args[1];\r\n      this.name = args[2];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ParticleParameterValue associated with the parameter.\r\n   */\r\n  public value: number = 0;\r\n\r\n  /**\r\n   * Any global (non particle-specific) options associated with\r\n   * this parameter\r\n   */\r\n  public options: ParticleParameterOptions = 0;\r\n\r\n  /**\r\n   * Name to display when this parameter is selected.\r\n   */\r\n  public name = \"\";\r\n\r\n  public Copy(other: ParticleParameterValue): this {\r\n    this.value = other.value;\r\n    this.options = other.options;\r\n    this.name = other.name;\r\n    return this;\r\n  }\r\n}\r\n\r\nexport class ParticleParameterDefinition {\r\n  /**\r\n   * Particle parameter definition.\r\n   */\r\n  constructor(values: ParticleParameterValue[], numValues: number = values.length) {\r\n    this.values = values;\r\n    this.numValues = numValues;\r\n  }\r\n\r\n  public values: ParticleParameterValue[];\r\n  public numValues: number = 0;\r\n\r\n  public CalculateValueMask(): number {\r\n    let mask = 0;\r\n    for (let i = 0; i < this.numValues; i++) {\r\n      mask |= this.values[i].value;\r\n    }\r\n    return mask;\r\n  }\r\n}\r\n\r\nexport class ParticleParameter {\r\n  public static readonly k_DefaultOptions: ParticleParameterOptions = ParticleParameterOptions.OptionDrawShapes | ParticleParameterOptions.OptionDrawParticles;\r\n  public static readonly k_particleTypes: ParticleParameterValue[] = [\r\n    new ParticleParameterValue(b2.ParticleFlag.b2_waterParticle, ParticleParameter.k_DefaultOptions, \"water\"),\r\n    new ParticleParameterValue(b2.ParticleFlag.b2_waterParticle, ParticleParameter.k_DefaultOptions | ParticleParameterOptions.OptionStrictContacts, \"water (strict)\"),\r\n    new ParticleParameterValue(b2.ParticleFlag.b2_springParticle, ParticleParameter.k_DefaultOptions, \"spring\"),\r\n    new ParticleParameterValue(b2.ParticleFlag.b2_elasticParticle, ParticleParameter.k_DefaultOptions, \"elastic\"),\r\n    new ParticleParameterValue(b2.ParticleFlag.b2_viscousParticle, ParticleParameter.k_DefaultOptions, \"viscous\"),\r\n    new ParticleParameterValue(b2.ParticleFlag.b2_powderParticle, ParticleParameter.k_DefaultOptions, \"powder\"),\r\n    new ParticleParameterValue(b2.ParticleFlag.b2_tensileParticle, ParticleParameter.k_DefaultOptions, \"tensile\"),\r\n    new ParticleParameterValue(b2.ParticleFlag.b2_colorMixingParticle, ParticleParameter.k_DefaultOptions, \"color mixing\"),\r\n    new ParticleParameterValue(b2.ParticleFlag.b2_wallParticle, ParticleParameter.k_DefaultOptions, \"wall\"),\r\n    new ParticleParameterValue(b2.ParticleFlag.b2_barrierParticle | b2.ParticleFlag.b2_wallParticle, ParticleParameter.k_DefaultOptions, \"barrier\"),\r\n    new ParticleParameterValue(b2.ParticleFlag.b2_staticPressureParticle, ParticleParameter.k_DefaultOptions, \"static pressure\"),\r\n    new ParticleParameterValue(b2.ParticleFlag.b2_waterParticle, ParticleParameter.k_DefaultOptions | ParticleParameterOptions.OptionDrawAABBs, \"water (bounding boxes)\"),\r\n  ];\r\n  public static readonly k_defaultDefinition: ParticleParameterDefinition[] = [\r\n    new ParticleParameterDefinition(ParticleParameter.k_particleTypes),\r\n  ];\r\n\r\n  public m_index = 0;\r\n  public m_changed = false;\r\n  public m_restartOnChange = false;\r\n  public m_value: ParticleParameterValue | null = null;\r\n  public m_definition: ParticleParameterDefinition[] = ParticleParameter.k_defaultDefinition;\r\n  public m_definitionCount = 0;\r\n  public m_valueCount = 0;\r\n\r\n  constructor() {\r\n    this.Reset();\r\n  }\r\n\r\n  public Reset() {\r\n    this.m_restartOnChange = true;\r\n    this.m_index = 0;\r\n    this.SetDefinition(ParticleParameter.k_defaultDefinition);\r\n    this.Set(0);\r\n  }\r\n\r\n  public SetDefinition(definition: ParticleParameterDefinition[], definitionCount: number = definition.length): void {\r\n    this.m_definition = definition;\r\n    this.m_definitionCount = definitionCount;\r\n    this.m_valueCount = 0;\r\n    for (let i = 0; i < this.m_definitionCount; ++i) {\r\n      this.m_valueCount += this.m_definition[i].numValues;\r\n    }\r\n    // Refresh the selected value.\r\n    this.Set(this.Get());\r\n  }\r\n\r\n  public Get(): number {\r\n    return this.m_index;\r\n  }\r\n\r\n  public Set(index: number): void {\r\n    this.m_changed = this.m_index !== index;\r\n    this.m_index = this.m_valueCount ? index % this.m_valueCount : index;\r\n    this.m_value = this.FindParticleParameterValue();\r\n    // DEBUG: b2.Assert(this.m_value !== null);\r\n  }\r\n\r\n  public Increment(): void {\r\n    const index = this.Get();\r\n    this.Set(index >= this.m_valueCount ? 0 : index + 1);\r\n  }\r\n\r\n  public Decrement(): void {\r\n    const index = this.Get();\r\n    this.Set(index === 0 ? this.m_valueCount - 1 : index - 1);\r\n  }\r\n\r\n  public Changed(restart: boolean[]): boolean {\r\n    const changed = this.m_changed;\r\n    this.m_changed = false;\r\n    if (restart) {\r\n      restart[0] = changed && this.GetRestartOnChange();\r\n    }\r\n    return changed;\r\n  }\r\n\r\n  public GetValue(): number {\r\n    if (this.m_value === null) { throw new Error(); }\r\n    return this.m_value.value;\r\n  }\r\n\r\n  public GetName(): string {\r\n    if (this.m_value === null) { throw new Error(); }\r\n    return this.m_value.name;\r\n  }\r\n\r\n  public GetOptions(): ParticleParameterOptions {\r\n    if (this.m_value === null) { throw new Error(); }\r\n    return this.m_value.options;\r\n  }\r\n\r\n  public SetRestartOnChange(enable: boolean): void {\r\n    this.m_restartOnChange = enable;\r\n  }\r\n\r\n  public GetRestartOnChange(): boolean {\r\n    return this.m_restartOnChange;\r\n  }\r\n\r\n  public FindIndexByValue(value: number): number {\r\n    let index = 0;\r\n    for (let i = 0; i < this.m_definitionCount; ++i) {\r\n      const definition = this.m_definition[i];\r\n      const numValues = definition.numValues;\r\n      for (let j = 0; j < numValues; ++j, ++index) {\r\n        if (definition.values[j].value === value) { return index; }\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  public FindParticleParameterValue(): ParticleParameterValue | null {\r\n    let start = 0;\r\n    const index = this.Get();\r\n    for (let i = 0; i < this.m_definitionCount; ++i) {\r\n      const definition = this.m_definition[i];\r\n      const end = start + definition.numValues;\r\n      if (index >= start && index < end) {\r\n        return definition.values[index - start];\r\n      }\r\n      start = end;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n// #endif\r\n","// MIT License\r\n\r\n// Copyright (c) 2019 Erin Catto\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\nimport * as b2 from \"@box2d\";\r\nimport { Settings } from \"./settings.js\";\r\nimport { g_debugDraw } from \"./draw.js\";\r\n// #if B2_ENABLE_PARTICLE\r\nimport { FullScreenUI } from \"./fullscreen_ui.js\";\r\nimport { ParticleParameter, ParticleParameterValue, ParticleParameterDefinition } from \"./particle_parameter.js\";\r\n// #endif\r\n\r\nexport const DRAW_STRING_NEW_LINE: number = 16;\r\n\r\nexport function RandomFloat(lo: number = -1, hi: number = 1) {\r\n  let r = Math.random();\r\n  r = (hi - lo) * r + lo;\r\n  return r;\r\n}\r\n\r\nexport class TestEntry {\r\n  public category: string = \"\";\r\n  public name: string = \"unknown\";\r\n  public createFcn: () => Test;\r\n\r\n  constructor(category: string, name: string, createFcn: () => Test) {\r\n    this.category = category;\r\n    this.name = name;\r\n    this.createFcn = createFcn;\r\n  }\r\n}\r\n\r\nexport const g_testEntries: TestEntry[] = [\r\n]\r\n\r\nexport function RegisterTest(category: string, name: string, fcn: () => Test): number {\r\n  return g_testEntries.push(new TestEntry(category, name, fcn));\r\n}\r\n\r\nexport class DestructionListener extends b2.DestructionListener {\r\n  public test: Test;\r\n\r\n  constructor(test: Test) {\r\n    super();\r\n\r\n    this.test = test;\r\n  }\r\n\r\n  public SayGoodbyeJoint(joint: b2.Joint): void {\r\n    if (this.test.m_mouseJoint === joint) {\r\n      this.test.m_mouseJoint = null;\r\n    } else {\r\n      this.test.JointDestroyed(joint);\r\n    }\r\n  }\r\n\r\n  public SayGoodbyeFixture(fixture: b2.Fixture): void {}\r\n\r\n  // #if B2_ENABLE_PARTICLE\r\n  public SayGoodbyeParticleGroup(group: b2.ParticleGroup) {\r\n    this.test.ParticleGroupDestroyed(group);\r\n  }\r\n  // #endif\r\n}\r\n\r\nexport class ContactPoint {\r\n  public fixtureA!: b2.Fixture;\r\n  public fixtureB!: b2.Fixture;\r\n  public readonly normal: b2.Vec2 = new b2.Vec2();\r\n  public readonly position: b2.Vec2 = new b2.Vec2();\r\n  public state: b2.PointState = b2.PointState.b2_nullState;\r\n  public normalImpulse: number = 0;\r\n  public tangentImpulse: number = 0;\r\n  public separation: number = 0;\r\n}\r\n\r\n// #if B2_ENABLE_PARTICLE\r\nclass QueryCallback2 extends b2.QueryCallback {\r\n  public m_particleSystem: b2.ParticleSystem;\r\n  public m_shape: b2.Shape;\r\n  public m_velocity: b2.Vec2;\r\n  constructor(particleSystem: b2.ParticleSystem, shape: b2.Shape, velocity: b2.Vec2) {\r\n    super();\r\n    this.m_particleSystem = particleSystem;\r\n    this.m_shape = shape;\r\n    this.m_velocity = velocity;\r\n  }\r\n\r\n  public ReportFixture(fixture: b2.Fixture): boolean {\r\n    return false;\r\n  }\r\n\r\n  public ReportParticle(particleSystem: b2.ParticleSystem, index: number): boolean {\r\n    if (particleSystem !== this.m_particleSystem) {\r\n      return false;\r\n    }\r\n    const xf = b2.Transform.IDENTITY;\r\n    const p = this.m_particleSystem.GetPositionBuffer()[index];\r\n    if (this.m_shape.TestPoint(xf, p)) {\r\n      const v = this.m_particleSystem.GetVelocityBuffer()[index];\r\n      v.Copy(this.m_velocity);\r\n    }\r\n    return true;\r\n  }\r\n}\r\n// #endif\r\n\r\nexport class Test extends b2.ContactListener {\r\n  // #if B2_ENABLE_PARTICLE\r\n  public static readonly fullscreenUI = new FullScreenUI();\r\n  public static readonly particleParameter = new ParticleParameter();\r\n  // #endif\r\n  public static readonly k_maxContactPoints: number = 2048;\r\n\r\n  public m_world: b2.World;\r\n  // #if B2_ENABLE_PARTICLE\r\n  public m_particleSystem: b2.ParticleSystem;\r\n  // #endif\r\n  public m_bomb: b2.Body | null = null;\r\n  public m_textLine: number = 30;\r\n  public m_mouseJoint: b2.MouseJoint | null = null;\r\n  public readonly m_points: ContactPoint[] = b2.MakeArray(Test.k_maxContactPoints, (i) => new ContactPoint());\r\n  public m_pointCount: number = 0;\r\n  public m_destructionListener: DestructionListener;\r\n  public readonly m_bombSpawnPoint: b2.Vec2 = new b2.Vec2();\r\n  public m_bombSpawning: boolean = false;\r\n  public readonly m_mouseWorld: b2.Vec2 = new b2.Vec2();\r\n  // #if B2_ENABLE_PARTICLE\r\n  public m_mouseTracing: boolean = false;\r\n  public readonly m_mouseTracerPosition: b2.Vec2 = new b2.Vec2();\r\n  public readonly m_mouseTracerVelocity: b2.Vec2 = new b2.Vec2();\r\n  // #endif\r\n  public m_stepCount: number = 0;\r\n  public readonly m_maxProfile: b2.Profile = new b2.Profile();\r\n  public readonly m_totalProfile: b2.Profile = new b2.Profile();\r\n  public m_groundBody: b2.Body;\r\n  // #if B2_ENABLE_PARTICLE\r\n  public m_particleParameters: ParticleParameterValue[] | null = null;\r\n  public m_particleParameterDef: ParticleParameterDefinition | null = null;\r\n  // #endif\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    // #if B2_ENABLE_PARTICLE\r\n    const particleSystemDef = new b2.ParticleSystemDef();\r\n    // #endif\r\n    const gravity: b2.Vec2 = new b2.Vec2(0, -10);\r\n    this.m_world = new b2.World(gravity);\r\n    // #if B2_ENABLE_PARTICLE\r\n    this.m_particleSystem = this.m_world.CreateParticleSystem(particleSystemDef);\r\n    // #endif\r\n    this.m_bomb = null;\r\n    this.m_textLine = 30;\r\n    this.m_mouseJoint = null;\r\n\r\n    this.m_destructionListener = new DestructionListener(this);\r\n    this.m_world.SetDestructionListener(this.m_destructionListener);\r\n    this.m_world.SetContactListener(this);\r\n    this.m_world.SetDebugDraw(g_debugDraw);\r\n\r\n    // #if B2_ENABLE_PARTICLE\r\n    this.m_particleSystem.SetGravityScale(0.4);\r\n    this.m_particleSystem.SetDensity(1.2);\r\n    // #endif\r\n\r\n    const bodyDef: b2.BodyDef = new b2.BodyDef();\r\n    this.m_groundBody = this.m_world.CreateBody(bodyDef);\r\n  }\r\n\r\n  public JointDestroyed(joint: b2.Joint): void {}\r\n\r\n  // #if B2_ENABLE_PARTICLE\r\n  public ParticleGroupDestroyed(group: b2.ParticleGroup) {}\r\n  // #endif\r\n\r\n  public BeginContact(contact: b2.Contact): void {}\r\n\r\n  public EndContact(contact: b2.Contact): void {}\r\n\r\n  private static PreSolve_s_state1: b2.PointState[] = [/*b2.maxManifoldPoints*/];\r\n  private static PreSolve_s_state2: b2.PointState[] = [/*b2.maxManifoldPoints*/];\r\n  private static PreSolve_s_worldManifold: b2.WorldManifold = new b2.WorldManifold();\r\n  public PreSolve(contact: b2.Contact, oldManifold: b2.Manifold): void {\r\n    const manifold: b2.Manifold = contact.GetManifold();\r\n\r\n    if (manifold.pointCount === 0) {\r\n      return;\r\n    }\r\n\r\n    const fixtureA: b2.Fixture | null = contact.GetFixtureA();\r\n    const fixtureB: b2.Fixture | null = contact.GetFixtureB();\r\n\r\n    const state1: b2.PointState[] = Test.PreSolve_s_state1;\r\n    const state2: b2.PointState[] = Test.PreSolve_s_state2;\r\n    b2.GetPointStates(state1, state2, oldManifold, manifold);\r\n\r\n    const worldManifold: b2.WorldManifold = Test.PreSolve_s_worldManifold;\r\n    contact.GetWorldManifold(worldManifold);\r\n\r\n    for (let i: number = 0; i < manifold.pointCount && this.m_pointCount < Test.k_maxContactPoints; ++i) {\r\n      const cp: ContactPoint = this.m_points[this.m_pointCount];\r\n      cp.fixtureA = fixtureA;\r\n      cp.fixtureB = fixtureB;\r\n      cp.position.Copy(worldManifold.points[i]);\r\n      cp.normal.Copy(worldManifold.normal);\r\n      cp.state = state2[i];\r\n      cp.normalImpulse = manifold.points[i].normalImpulse;\r\n      cp.tangentImpulse = manifold.points[i].tangentImpulse;\r\n      cp.separation = worldManifold.separations[i];\r\n      ++this.m_pointCount;\r\n    }\r\n  }\r\n\r\n  public PostSolve(contact: b2.Contact, impulse: b2.ContactImpulse): void {}\r\n\r\n  public Keyboard(key: string): void {}\r\n\r\n  public KeyboardUp(key: string): void {}\r\n\r\n  public SetTextLine(line: number): void {\r\n    this.m_textLine = line;\r\n  }\r\n\r\n  public DrawTitle(title: string): void {\r\n    g_debugDraw.DrawString(5, DRAW_STRING_NEW_LINE, title);\r\n    this.m_textLine = 3 * DRAW_STRING_NEW_LINE;\r\n  }\r\n\r\n  public MouseDown(p: b2.Vec2): void {\r\n    this.m_mouseWorld.Copy(p);\r\n    // #if B2_ENABLE_PARTICLE\r\n    this.m_mouseTracing = true;\r\n    this.m_mouseTracerPosition.Copy(p);\r\n    this.m_mouseTracerVelocity.SetZero();\r\n    // #endif\r\n\r\n    if (this.m_mouseJoint !== null) {\r\n      this.m_world.DestroyJoint(this.m_mouseJoint);\r\n      this.m_mouseJoint = null;\r\n    }\r\n\r\n    let hit_fixture: b2.Fixture | null | any = null; // HACK: tsc doesn't detect calling callbacks\r\n\r\n    // Query the world for overlapping shapes.\r\n    this.m_world.QueryPointAABB(p, (fixture: b2.Fixture): boolean => {\r\n      const body = fixture.GetBody();\r\n      if (body.GetType() === b2.BodyType.b2_dynamicBody) {\r\n        const inside = fixture.TestPoint(p);\r\n        if (inside) {\r\n          hit_fixture = fixture;\r\n          return false; // We are done, terminate the query.\r\n        }\r\n      }\r\n      return true; // Continue the query.\r\n    });\r\n\r\n    if (hit_fixture) {\r\n      const frequencyHz = 5.0;\r\n      const dampingRatio = 0.7;\r\n\r\n      const body = hit_fixture.GetBody();\r\n      const jd: b2.MouseJointDef = new b2.MouseJointDef();\r\n      jd.bodyA = this.m_groundBody;\r\n      jd.bodyB = body;\r\n      jd.target.Copy(p);\r\n      jd.maxForce = 1000 * body.GetMass();\r\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\r\n\r\n      this.m_mouseJoint = this.m_world.CreateJoint(jd);\r\n      body.SetAwake(true);\r\n    }\r\n  }\r\n\r\n  public SpawnBomb(worldPt: b2.Vec2): void {\r\n    this.m_bombSpawnPoint.Copy(worldPt);\r\n    this.m_bombSpawning = true;\r\n  }\r\n\r\n  public CompleteBombSpawn(p: b2.Vec2): void {\r\n    if (!this.m_bombSpawning) {\r\n      return;\r\n    }\r\n\r\n    const multiplier: number = 30;\r\n    const vel: b2.Vec2 = b2.Vec2.SubVV(this.m_bombSpawnPoint, p, new b2.Vec2());\r\n    vel.SelfMul(multiplier);\r\n    this.LaunchBombAt(this.m_bombSpawnPoint, vel);\r\n    this.m_bombSpawning = false;\r\n  }\r\n\r\n  public ShiftMouseDown(p: b2.Vec2): void {\r\n    this.m_mouseWorld.Copy(p);\r\n\r\n    if (this.m_mouseJoint !== null) {\r\n      return;\r\n    }\r\n\r\n    this.SpawnBomb(p);\r\n  }\r\n\r\n  public MouseUp(p: b2.Vec2): void {\r\n    // #if B2_ENABLE_PARTICLE\r\n    this.m_mouseTracing = false;\r\n    // #endif\r\n    if (this.m_mouseJoint) {\r\n      this.m_world.DestroyJoint(this.m_mouseJoint);\r\n      this.m_mouseJoint = null;\r\n    }\r\n\r\n    if (this.m_bombSpawning) {\r\n      this.CompleteBombSpawn(p);\r\n    }\r\n  }\r\n\r\n  public MouseMove(p: b2.Vec2): void {\r\n    this.m_mouseWorld.Copy(p);\r\n\r\n    if (this.m_mouseJoint) {\r\n      this.m_mouseJoint.SetTarget(p);\r\n    }\r\n  }\r\n\r\n  public LaunchBomb(): void {\r\n    const p: b2.Vec2 = new b2.Vec2(b2.RandomRange(-15, 15), 30);\r\n    const v: b2.Vec2 = b2.Vec2.MulSV(-5, p, new b2.Vec2());\r\n    this.LaunchBombAt(p, v);\r\n  }\r\n\r\n  public LaunchBombAt(position: b2.Vec2, velocity: b2.Vec2): void {\r\n    if (this.m_bomb) {\r\n      this.m_world.DestroyBody(this.m_bomb);\r\n      this.m_bomb = null;\r\n    }\r\n\r\n    const bd: b2.BodyDef = new b2.BodyDef();\r\n    bd.type = b2.BodyType.b2_dynamicBody;\r\n    bd.position.Copy(position);\r\n    bd.bullet = true;\r\n    this.m_bomb = this.m_world.CreateBody(bd);\r\n    this.m_bomb.SetLinearVelocity(velocity);\r\n\r\n    const circle: b2.CircleShape = new b2.CircleShape();\r\n    circle.m_radius = 0.3;\r\n\r\n    const fd: b2.FixtureDef = new b2.FixtureDef();\r\n    fd.shape = circle;\r\n    fd.density = 20;\r\n    fd.restitution = 0;\r\n\r\n    // b2.Vec2 minV = position - b2.Vec2(0.3f,0.3f);\r\n    // b2.Vec2 maxV = position + b2.Vec2(0.3f,0.3f);\r\n\r\n    // b2.AABB aabb;\r\n    // aabb.lowerBound = minV;\r\n    // aabb.upperBound = maxV;\r\n\r\n    this.m_bomb.CreateFixture(fd);\r\n  }\r\n\r\n  public Step(settings: Settings): void {\r\n    let timeStep = settings.m_hertz > 0 ? 1 / settings.m_hertz : 0;\r\n\r\n    if (settings.m_pause) {\r\n      if (settings.m_singleStep) {\r\n        settings.m_singleStep = false;\r\n      } else {\r\n        timeStep = 0;\r\n      }\r\n\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"****PAUSED****\");\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n    }\r\n\r\n    let flags = b2.DrawFlags.e_none;\r\n    if (settings.m_drawShapes) { flags |= b2.DrawFlags.e_shapeBit;        }\r\n    // #if B2_ENABLE_PARTICLE\r\n    if (settings.m_drawParticles) { flags |= b2.DrawFlags.e_particleBit; }\r\n    // #endif\r\n    if (settings.m_drawJoints) { flags |= b2.DrawFlags.e_jointBit;        }\r\n    if (settings.m_drawAABBs ) { flags |= b2.DrawFlags.e_aabbBit;         }\r\n    if (settings.m_drawCOMs  ) { flags |= b2.DrawFlags.e_centerOfMassBit; }\r\n    // #if B2_ENABLE_CONTROLLER\r\n    if (settings.m_drawControllers  ) { flags |= b2.DrawFlags.e_controllerBit; }\r\n    // #endif\r\n    g_debugDraw.SetFlags(flags);\r\n\r\n    this.m_world.SetAllowSleeping(settings.m_enableSleep);\r\n    this.m_world.SetWarmStarting(settings.m_enableWarmStarting);\r\n    this.m_world.SetContinuousPhysics(settings.m_enableContinuous);\r\n    this.m_world.SetSubStepping(settings.m_enableSubStepping);\r\n    // #if B2_ENABLE_PARTICLE\r\n    this.m_particleSystem.SetStrictContactCheck(settings.m_strictContacts);\r\n    // #endif\r\n\r\n    this.m_pointCount = 0;\r\n\r\n    // #if B2_ENABLE_PARTICLE\r\n    this.m_world.Step(timeStep, settings.m_velocityIterations, settings.m_positionIterations, settings.m_particleIterations);\r\n    // #else\r\n    // this.m_world.Step(timeStep, settings.velocityIterations, settings.positionIterations);\r\n    // #endif\r\n\r\n    this.m_world.DebugDraw();\r\n\r\n    if (timeStep > 0) {\r\n      ++this.m_stepCount;\r\n    }\r\n\r\n    if (settings.m_drawStats) {\r\n      const bodyCount = this.m_world.GetBodyCount();\r\n      const contactCount = this.m_world.GetContactCount();\r\n      const jointCount = this.m_world.GetJointCount();\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"bodies/contacts/joints = \" + bodyCount + \"/\" + contactCount + \"/\" + jointCount);\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n\r\n      // #if B2_ENABLE_PARTICLE\r\n      const particleCount = this.m_particleSystem.GetParticleCount();\r\n      const groupCount = this.m_particleSystem.GetParticleGroupCount();\r\n      const pairCount = this.m_particleSystem.GetPairCount();\r\n      const triadCount = this.m_particleSystem.GetTriadCount();\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"particles/groups/pairs/triads = \" + particleCount + \"/\" + groupCount + \"/\" + pairCount + \"/\" + triadCount);\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n      // #endif\r\n\r\n      const proxyCount = this.m_world.GetProxyCount();\r\n      const height = this.m_world.GetTreeHeight();\r\n      const balance = this.m_world.GetTreeBalance();\r\n      const quality = this.m_world.GetTreeQuality();\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"proxies/height/balance/quality = \" + proxyCount + \"/\" + height + \"/\" + balance + \"/\" + quality.toFixed(2));\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n    }\r\n\r\n    // Track maximum profile times\r\n    {\r\n      const p = this.m_world.GetProfile();\r\n      this.m_maxProfile.step = b2.Max(this.m_maxProfile.step, p.step);\r\n      this.m_maxProfile.collide = b2.Max(this.m_maxProfile.collide, p.collide);\r\n      this.m_maxProfile.solve = b2.Max(this.m_maxProfile.solve, p.solve);\r\n      this.m_maxProfile.solveInit = b2.Max(this.m_maxProfile.solveInit, p.solveInit);\r\n      this.m_maxProfile.solveVelocity = b2.Max(this.m_maxProfile.solveVelocity, p.solveVelocity);\r\n      this.m_maxProfile.solvePosition = b2.Max(this.m_maxProfile.solvePosition, p.solvePosition);\r\n      this.m_maxProfile.solveTOI = b2.Max(this.m_maxProfile.solveTOI, p.solveTOI);\r\n      this.m_maxProfile.broadphase = b2.Max(this.m_maxProfile.broadphase, p.broadphase);\r\n\r\n      this.m_totalProfile.step += p.step;\r\n      this.m_totalProfile.collide += p.collide;\r\n      this.m_totalProfile.solve += p.solve;\r\n      this.m_totalProfile.solveInit += p.solveInit;\r\n      this.m_totalProfile.solveVelocity += p.solveVelocity;\r\n      this.m_totalProfile.solvePosition += p.solvePosition;\r\n      this.m_totalProfile.solveTOI += p.solveTOI;\r\n      this.m_totalProfile.broadphase += p.broadphase;\r\n    }\r\n\r\n    if (settings.m_drawProfile) {\r\n      const p = this.m_world.GetProfile();\r\n\r\n      const aveProfile: b2.Profile = new b2.Profile();\r\n      if (this.m_stepCount > 0) {\r\n        const scale: number = 1 / this.m_stepCount;\r\n        aveProfile.step = scale * this.m_totalProfile.step;\r\n        aveProfile.collide = scale * this.m_totalProfile.collide;\r\n        aveProfile.solve = scale * this.m_totalProfile.solve;\r\n        aveProfile.solveInit = scale * this.m_totalProfile.solveInit;\r\n        aveProfile.solveVelocity = scale * this.m_totalProfile.solveVelocity;\r\n        aveProfile.solvePosition = scale * this.m_totalProfile.solvePosition;\r\n        aveProfile.solveTOI = scale * this.m_totalProfile.solveTOI;\r\n        aveProfile.broadphase = scale * this.m_totalProfile.broadphase;\r\n      }\r\n\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"step [ave] (max) = \" + p.step.toFixed(2) + \" [\" + aveProfile.step.toFixed(2) + \"] (\" + this.m_maxProfile.step.toFixed(2) + \")\");\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"collide [ave] (max) = \" + p.collide.toFixed(2) + \" [\" + aveProfile.collide.toFixed(2) + \"] (\" + this.m_maxProfile.collide.toFixed(2) + \")\");\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"solve [ave] (max) = \" + p.solve.toFixed(2) + \" [\" + aveProfile.solve.toFixed(2) + \"] (\" + this.m_maxProfile.solve.toFixed(2) + \")\");\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"solve init [ave] (max) = \" + p.solveInit.toFixed(2) + \" [\" + aveProfile.solveInit.toFixed(2) + \"] (\" + this.m_maxProfile.solveInit.toFixed(2) + \")\");\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"solve velocity [ave] (max) = \" + p.solveVelocity.toFixed(2) + \" [\" + aveProfile.solveVelocity.toFixed(2) + \"] (\" + this.m_maxProfile.solveVelocity.toFixed(2) + \")\");\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"solve position [ave] (max) = \" + p.solvePosition.toFixed(2) + \" [\" + aveProfile.solvePosition.toFixed(2) + \"] (\" + this.m_maxProfile.solvePosition.toFixed(2) + \")\");\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"solveTOI [ave] (max) = \" + p.solveTOI.toFixed(2) + \" [\" + aveProfile.solveTOI.toFixed(2) + \"] (\" + this.m_maxProfile.solveTOI.toFixed(2) + \")\");\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"broad-phase [ave] (max) = \" + p.broadphase.toFixed(2) + \" [\" + aveProfile.broadphase.toFixed(2) + \"] (\" + this.m_maxProfile.broadphase.toFixed(2) + \")\");\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n    }\r\n\r\n    // #if B2_ENABLE_PARTICLE\r\n    if (this.m_mouseTracing && !this.m_mouseJoint) {\r\n      const delay = 0.1;\r\n      ///b2Vec2 acceleration = 2 / delay * (1 / delay * (m_mouseWorld - m_mouseTracerPosition) - m_mouseTracerVelocity);\r\n      const acceleration = new b2.Vec2();\r\n      acceleration.x = 2 / delay * (1 / delay * (this.m_mouseWorld.x - this.m_mouseTracerPosition.x) - this.m_mouseTracerVelocity.x);\r\n      acceleration.y = 2 / delay * (1 / delay * (this.m_mouseWorld.y - this.m_mouseTracerPosition.y) - this.m_mouseTracerVelocity.y);\r\n      ///m_mouseTracerVelocity += timeStep * acceleration;\r\n      this.m_mouseTracerVelocity.SelfMulAdd(timeStep, acceleration);\r\n      ///m_mouseTracerPosition += timeStep * m_mouseTracerVelocity;\r\n      this.m_mouseTracerPosition.SelfMulAdd(timeStep, this.m_mouseTracerVelocity);\r\n      const shape = new b2.CircleShape();\r\n      shape.m_p.Copy(this.m_mouseTracerPosition);\r\n      shape.m_radius = 2 * this.GetDefaultViewZoom();\r\n      ///QueryCallback2 callback(m_particleSystem, &shape, m_mouseTracerVelocity);\r\n      const callback = new QueryCallback2(this.m_particleSystem, shape, this.m_mouseTracerVelocity);\r\n      const aabb = new b2.AABB();\r\n      const xf = new b2.Transform();\r\n      xf.SetIdentity();\r\n      shape.ComputeAABB(aabb, xf, 0);\r\n      this.m_world.QueryAABB(callback, aabb);\r\n    }\r\n    // #endif\r\n\r\n    if (this.m_bombSpawning) {\r\n      const c: b2.Color = new b2.Color(0, 0, 1);\r\n      g_debugDraw.DrawPoint(this.m_bombSpawnPoint, 4, c);\r\n\r\n      c.SetRGB(0.8, 0.8, 0.8);\r\n      g_debugDraw.DrawSegment(this.m_mouseWorld, this.m_bombSpawnPoint, c);\r\n    }\r\n\r\n    if (settings.m_drawContactPoints) {\r\n      const k_impulseScale: number = 0.1;\r\n      const k_axisScale: number = 0.3;\r\n\r\n      for (let i: number = 0; i < this.m_pointCount; ++i) {\r\n        const point = this.m_points[i];\r\n\r\n        if (point.state === b2.PointState.b2_addState) {\r\n          // Add\r\n          g_debugDraw.DrawPoint(point.position, 10, new b2.Color(0.3, 0.95, 0.3));\r\n        } else if (point.state === b2.PointState.b2_persistState) {\r\n          // Persist\r\n          g_debugDraw.DrawPoint(point.position, 5, new b2.Color(0.3, 0.3, 0.95));\r\n        }\r\n\r\n        if (settings.m_drawContactNormals) {\r\n          const p1 = point.position;\r\n          const p2: b2.Vec2 = b2.Vec2.AddVV(p1, b2.Vec2.MulSV(k_axisScale, point.normal, b2.Vec2.s_t0), new b2.Vec2());\r\n          g_debugDraw.DrawSegment(p1, p2, new b2.Color(0.9, 0.9, 0.9));\r\n        } else if (settings.m_drawContactImpulse) {\r\n          const p1 = point.position;\r\n          const p2: b2.Vec2 = b2.Vec2.AddVMulSV(p1, k_impulseScale * point.normalImpulse, point.normal, new b2.Vec2());\r\n          g_debugDraw.DrawSegment(p1, p2, new b2.Color(0.9, 0.9, 0.3));\r\n        }\r\n\r\n        if (settings.m_drawFrictionImpulse) {\r\n          const tangent: b2.Vec2 = b2.Vec2.CrossVOne(point.normal, new b2.Vec2());\r\n          const p1 = point.position;\r\n          const p2: b2.Vec2 = b2.Vec2.AddVMulSV(p1, k_impulseScale * point.tangentImpulse, tangent, new b2.Vec2());\r\n          g_debugDraw.DrawSegment(p1, p2, new b2.Color(0.9, 0.9, 0.3));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public ShiftOrigin(newOrigin: b2.Vec2): void {\r\n    this.m_world.ShiftOrigin(newOrigin);\r\n  }\r\n\r\n  public GetDefaultViewZoom(): number {\r\n    return 1.0;\r\n  }\r\n\r\n  // #if B2_ENABLE_PARTICLE\r\n  public static readonly k_ParticleColors: b2.Color[] = [\r\n    new b2.Color().SetByteRGBA(0xff, 0x00, 0x00, 0xff), // red\r\n    new b2.Color().SetByteRGBA(0x00, 0xff, 0x00, 0xff), // green\r\n    new b2.Color().SetByteRGBA(0x00, 0x00, 0xff, 0xff), // blue\r\n    new b2.Color().SetByteRGBA(0xff, 0x8c, 0x00, 0xff), // orange\r\n    new b2.Color().SetByteRGBA(0x00, 0xce, 0xd1, 0xff), // turquoise\r\n    new b2.Color().SetByteRGBA(0xff, 0x00, 0xff, 0xff), // magenta\r\n    new b2.Color().SetByteRGBA(0xff, 0xd7, 0x00, 0xff), // gold\r\n    new b2.Color().SetByteRGBA(0x00, 0xff, 0xff, 0xff), // cyan\r\n  ];\r\n\r\n  public static readonly k_ParticleColorsCount = Test.k_ParticleColors.length;\r\n\r\n  /**\r\n   * Apply a preset range of colors to a particle group.\r\n   *\r\n   * A different color out of k_ParticleColors is applied to each\r\n   * particlesPerColor particles in the specified group.\r\n   *\r\n   * If particlesPerColor is 0, the particles in the group are\r\n   * divided into k_ParticleColorsCount equal sets of colored\r\n   * particles.\r\n   */\r\n  public ColorParticleGroup(group: b2.ParticleGroup, particlesPerColor: number) {\r\n    // DEBUG: b2.Assert(group !== null);\r\n    const colorBuffer = this.m_particleSystem.GetColorBuffer();\r\n    const particleCount = group.GetParticleCount();\r\n    const groupStart = group.GetBufferIndex();\r\n    const groupEnd = particleCount + groupStart;\r\n    const colorCount = Test.k_ParticleColors.length;\r\n    if (!particlesPerColor) {\r\n      particlesPerColor = Math.floor(particleCount / colorCount);\r\n      if (!particlesPerColor) {\r\n        particlesPerColor = 1;\r\n      }\r\n    }\r\n    for (let i = groupStart; i < groupEnd; i++) {\r\n      ///colorBuffer[i].Copy(box2d.Testbed.Test.k_ParticleColors[Math.floor(i / particlesPerColor) % colorCount]);\r\n      colorBuffer[i] = Test.k_ParticleColors[Math.floor(i / particlesPerColor) % colorCount].Clone();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove particle parameters matching \"filterMask\" from the set\r\n   * of particle parameters available for this test.\r\n   */\r\n  public InitializeParticleParameters(filterMask: number) {\r\n    const defaultNumValues = ParticleParameter.k_defaultDefinition[0].numValues;\r\n    const defaultValues = ParticleParameter.k_defaultDefinition[0].values;\r\n    ///  m_particleParameters = new ParticleParameter::Value[defaultNumValues];\r\n    this.m_particleParameters = [];\r\n    // Disable selection of wall and barrier particle types.\r\n    let numValues = 0;\r\n    for (let i = 0; i < defaultNumValues; i++) {\r\n      if (defaultValues[i].value & filterMask) {\r\n        continue;\r\n      }\r\n      ///memcpy(&m_particleParameters[numValues], &defaultValues[i], sizeof(defaultValues[0]));\r\n      this.m_particleParameters[numValues] = new ParticleParameterValue(defaultValues[i]);\r\n      numValues++;\r\n    }\r\n    this.m_particleParameterDef = new ParticleParameterDefinition(this.m_particleParameters, numValues);\r\n    ///m_particleParameterDef.values = m_particleParameters;\r\n    ///m_particleParameterDef.numValues = numValues;\r\n    Test.SetParticleParameters([this.m_particleParameterDef], 1);\r\n  }\r\n\r\n  /**\r\n   * Restore default particle parameters.\r\n   */\r\n  public RestoreParticleParameters() {\r\n    if (this.m_particleParameters) {\r\n      Test.SetParticleParameters(ParticleParameter.k_defaultDefinition, 1);\r\n      ///  delete [] m_particleParameters;\r\n      this.m_particleParameters = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set whether to restart the test on particle parameter\r\n   * changes. This parameter is re-enabled when the test changes.\r\n   */\r\n  public static SetRestartOnParticleParameterChange(enable: boolean): void {\r\n    Test.particleParameter.SetRestartOnChange(enable);\r\n  }\r\n\r\n  /**\r\n   * Set the currently selected particle parameter value.  This\r\n   * value must match one of the values in\r\n   * Main::k_particleTypes or one of the values referenced by\r\n   * particleParameterDef passed to SetParticleParameters().\r\n   */\r\n  public static SetParticleParameterValue(value: number): number {\r\n    const index = Test.particleParameter.FindIndexByValue(value);\r\n    // If the particle type isn't found, so fallback to the first entry in the\r\n    // parameter.\r\n    Test.particleParameter.Set(index >= 0 ? index : 0);\r\n    return Test.particleParameter.GetValue();\r\n  }\r\n\r\n  /**\r\n   * Get the currently selected particle parameter value and\r\n   * enable particle parameter selection arrows on Android.\r\n   */\r\n  public static GetParticleParameterValue(): number {\r\n    // Enable display of particle type selection arrows.\r\n    Test.fullscreenUI.SetParticleParameterSelectionEnabled(true);\r\n    return Test.particleParameter.GetValue();\r\n  }\r\n\r\n  /**\r\n   * Override the default particle parameters for the test.\r\n   */\r\n  public static SetParticleParameters(particleParameterDef: ParticleParameterDefinition[], particleParameterDefCount: number = particleParameterDef.length) {\r\n    Test.particleParameter.SetDefinition(particleParameterDef, particleParameterDefCount);\r\n  }\r\n\r\n  // #endif\r\n}\r\n","// MIT License\r\n\r\n// Copyright (c) 2019 Erin Catto\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\nimport * as b2 from \"@box2d\";\r\nimport * as testbed from \"@testbed\";\r\n\r\nexport class BoxStack extends testbed.Test {\r\n  public static readonly e_columnCount = 1;\r\n  public static readonly e_rowCount = 15;\r\n\r\n  public m_bullet: b2.Body | null = null;\r\n  public m_bodies: b2.Body[];\r\n  public m_indices: number[];\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.m_bodies = new Array(BoxStack.e_rowCount * BoxStack.e_columnCount);\r\n    this.m_indices = new Array(BoxStack.e_rowCount * BoxStack.e_columnCount);\r\n\r\n    {\r\n      const bd = new b2.BodyDef();\r\n      const ground = this.m_world.CreateBody(bd);\r\n\r\n      const shape = new b2.EdgeShape();\r\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\r\n      ground.CreateFixture(shape, 0.0);\r\n\r\n      shape.SetTwoSided(new b2.Vec2(20.0, 0.0), new b2.Vec2(20.0, 20.0));\r\n      ground.CreateFixture(shape, 0.0);\r\n    }\r\n\r\n    const xs = [0.0, -10.0, -5.0, 5.0, 10.0];\r\n\r\n    for (let j = 0; j < BoxStack.e_columnCount; ++j) {\r\n      const shape = new b2.PolygonShape();\r\n      shape.SetAsBox(0.5, 0.5);\r\n\r\n      const fd = new b2.FixtureDef();\r\n      fd.shape = shape;\r\n      fd.density = 1.0;\r\n      fd.friction = 0.3;\r\n\r\n      for (let i = 0; i < BoxStack.e_rowCount; ++i) {\r\n        const bd = new b2.BodyDef();\r\n        bd.type = b2.BodyType.b2_dynamicBody;\r\n\r\n        const n = j * BoxStack.e_rowCount + i;\r\n        // DEBUG: b2.Assert(n < BoxStack.e_rowCount * BoxStack.e_columnCount);\r\n        this.m_indices[n] = n;\r\n        bd.userData = this.m_indices[n];\r\n\r\n        const x = 0.0;\r\n        //const x = b2.RandomRange(-0.02, 0.02);\r\n        //const x = i % 2 === 0 ? -0.01 : 0.01;\r\n        bd.position.Set(xs[j] + x, 0.55 + 1.1 * i);\r\n        const body = this.m_world.CreateBody(bd);\r\n\r\n        this.m_bodies[n] = body;\r\n\r\n        body.CreateFixture(fd);\r\n      }\r\n    }\r\n  }\r\n\r\n  public Keyboard(key: string) {\r\n    switch (key) {\r\n      case \",\":\r\n        if (this.m_bullet) {\r\n          this.m_world.DestroyBody(this.m_bullet);\r\n          this.m_bullet = null;\r\n        }\r\n\r\n        {\r\n          const shape = new b2.CircleShape();\r\n          shape.m_radius = 0.25;\r\n\r\n          const fd = new b2.FixtureDef();\r\n          fd.shape = shape;\r\n          fd.density = 20.0;\r\n          fd.restitution = 0.05;\r\n\r\n          const bd = new b2.BodyDef();\r\n          bd.type = b2.BodyType.b2_dynamicBody;\r\n          bd.bullet = true;\r\n          bd.position.Set(-31.0, 5.0);\r\n\r\n          this.m_bullet = this.m_world.CreateBody(bd);\r\n          this.m_bullet.CreateFixture(fd);\r\n\r\n          this.m_bullet.SetLinearVelocity(new b2.Vec2(400.0, 0.0));\r\n        }\r\n        break;\r\n      case \"b\":\r\n        b2.set_g_blockSolve(!b2.get_g_blockSolve());\r\n        break;\r\n    }\r\n  }\r\n\r\n  public Step(settings: testbed.Settings): void {\r\n    super.Step(settings);\r\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press: (,) to launch a bullet.\");\r\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\r\n    // testbed.g_debugDraw.DrawString(5, this.m_textLine, `Blocksolve = ${(b2.blockSolve) ? (1) : (0)}`);\r\n    //if (this.m_stepCount === 300)\r\n    //{\r\n    //  if (this.m_bullet !== null)\r\n    //  {\r\n    //    this.m_world.DestroyBody(this.m_bullet);\r\n    //    this.m_bullet = null;\r\n    //  }\r\n\r\n    //  {\r\n    //    const shape = new b2.CircleShape();\r\n    //    shape.m_radius = 0.25;\r\n\r\n    //    const fd = new b2.FixtureDef();\r\n    //    fd.shape = shape;\r\n    //    fd.density = 20.0;\r\n    //    fd.restitution = 0.05;\r\n\r\n    //    const bd = new b2.BodyDef();\r\n    //    bd.type = b2.BodyType.b2_dynamicBody;\r\n    //    bd.bullet = true;\r\n    //    bd.position.Set(-31.0, 5.0);\r\n\r\n    //    this.m_bullet = this.m_world.CreateBody(bd);\r\n    //    this.m_bullet.CreateFixture(fd);\r\n\r\n    //    this.m_bullet.SetLinearVelocity(new b2.Vec2(400.0, 0.0));\r\n    //  }\r\n    //}\r\n  }\r\n\r\n  public static Create(): testbed.Test {\r\n    return new BoxStack();\r\n  }\r\n}\r\n\r\nexport const testIndex: number = testbed.RegisterTest(\"Stacking\", \"Boxes\", BoxStack.Create);\r\n","// MIT License\r\n\r\n// Copyright (c) 2019 Erin Catto\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\nimport * as b2 from \"@box2d\";\r\nimport { Settings } from \"./settings.js\";\r\nimport { Test, g_testEntries } from \"./test.js\";\r\nimport { g_debugDraw, g_camera } from \"./draw.js\";\r\n\r\nexport class Main {\r\n  public m_time_last: number = 0;\r\n  public m_fps_time: number = 0;\r\n  public m_fps_frames: number = 0;\r\n  public m_fps: number = 0;\r\n  public m_fps_div: HTMLDivElement;\r\n  public m_debug_div: HTMLDivElement;\r\n  public readonly m_settings: Settings = new Settings();\r\n  public m_test?: Test;\r\n  public m_test_select: HTMLSelectElement;\r\n  public m_test_options: HTMLOptionElement[];\r\n  public m_shift: boolean = false;\r\n  public m_ctrl: boolean = false;\r\n  public m_lMouseDown: boolean = false;\r\n  public m_rMouseDown: boolean = false;\r\n  public readonly m_projection0: b2.Vec2 = new b2.Vec2();\r\n  public readonly m_viewCenter0: b2.Vec2 = new b2.Vec2();\r\n  public m_demo_mode: boolean = false;\r\n  public m_demo_time: number = 0;\r\n  public m_max_demo_time: number = 1000 * 10;\r\n  public m_canvas_div: HTMLDivElement;\r\n  public m_canvas_2d: HTMLCanvasElement;\r\n  public m_ctx: CanvasRenderingContext2D | null = null;\r\n  public m_demo_button: HTMLInputElement;\r\n\r\n  constructor(time: number) {\r\n    const fps_div: HTMLDivElement = this.m_fps_div = document.body.appendChild(document.createElement(\"div\"));\r\n    fps_div.style.position = \"absolute\";\r\n    fps_div.style.left = \"0px\";\r\n    fps_div.style.bottom = \"0px\";\r\n    fps_div.style.backgroundColor = \"rgba(0,0,255,0.75)\";\r\n    fps_div.style.color = \"white\";\r\n    fps_div.style.font = \"10pt Courier New\";\r\n    fps_div.style.zIndex = \"256\";\r\n    fps_div.innerHTML = \"FPS\";\r\n\r\n    const debug_div: HTMLDivElement = this.m_debug_div = document.body.appendChild(document.createElement(\"div\"));\r\n    debug_div.style.position = \"absolute\";\r\n    debug_div.style.left = \"0px\";\r\n    debug_div.style.bottom = \"0px\";\r\n    debug_div.style.backgroundColor = \"rgba(0,0,255,0.75)\";\r\n    debug_div.style.color = \"white\";\r\n    debug_div.style.font = \"10pt Courier New\";\r\n    debug_div.style.zIndex = \"256\";\r\n    debug_div.innerHTML = \"\";\r\n\r\n    document.body.style.backgroundColor = \"rgba(51, 51, 51, 1.0)\";\r\n\r\n    const main_div: HTMLDivElement = document.body.appendChild(document.createElement(\"div\"));\r\n    main_div.style.position = \"absolute\"; // relative to document.body\r\n    main_div.style.left = \"0px\";\r\n    main_div.style.top = \"0px\";\r\n\r\n    function resize_main_div(): void {\r\n      // console.log(window.innerWidth + \"x\" + window.innerHeight);\r\n      main_div.style.width = window.innerWidth + \"px\";\r\n      main_div.style.height = window.innerHeight + \"px\";\r\n    }\r\n    window.addEventListener(\"resize\", (e: UIEvent): void => { resize_main_div(); });\r\n    window.addEventListener(\"orientationchange\", (e: Event): void => { resize_main_div(); });\r\n    resize_main_div();\r\n\r\n    const title_div: HTMLDivElement = main_div.appendChild(document.createElement(\"div\"));\r\n    title_div.style.textAlign = \"center\";\r\n    title_div.style.color = \"grey\";\r\n    title_div.innerHTML = \"Box2D Testbed version \" + b2.version.toString();\r\n\r\n    const view_div: HTMLDivElement = main_div.appendChild(document.createElement(\"div\"));\r\n\r\n    const canvas_div: HTMLDivElement = this.m_canvas_div = view_div.appendChild(document.createElement(\"div\"));\r\n    canvas_div.style.position = \"absolute\"; // relative to view_div\r\n    canvas_div.style.left = \"0px\";\r\n    canvas_div.style.right = \"0px\";\r\n    canvas_div.style.top = \"0px\";\r\n    canvas_div.style.bottom = \"0px\";\r\n\r\n    const canvas_2d: HTMLCanvasElement = this.m_canvas_2d = canvas_div.appendChild(document.createElement(\"canvas\"));\r\n\r\n    function resize_canvas(): void {\r\n      ///console.log(canvas_div.clientWidth + \"x\" + canvas_div.clientHeight);\r\n      if (canvas_2d.width !== canvas_div.clientWidth) {\r\n        g_camera.m_width = canvas_2d.width = canvas_div.clientWidth;\r\n      }\r\n      if (canvas_2d.height !== canvas_div.clientHeight) {\r\n        g_camera.m_height = canvas_2d.height = canvas_div.clientHeight;\r\n      }\r\n    }\r\n    window.addEventListener(\"resize\", (e: UIEvent): void => { resize_canvas(); });\r\n    window.addEventListener(\"orientationchange\", (e: Event): void => { resize_canvas(); });\r\n    resize_canvas();\r\n\r\n    g_debugDraw.m_ctx = this.m_ctx = this.m_canvas_2d.getContext(\"2d\");\r\n\r\n    const controls_div: HTMLDivElement = view_div.appendChild(document.createElement(\"div\"));\r\n    controls_div.style.position = \"absolute\"; // relative to view_div\r\n    controls_div.style.backgroundColor = \"rgba(255,255,255,0.5)\";\r\n    controls_div.style.padding = \"8px\";\r\n    controls_div.style.right = \"0px\";\r\n    controls_div.style.top = \"0px\";\r\n    controls_div.style.bottom = \"0px\";\r\n    controls_div.style.overflowY = \"scroll\";\r\n\r\n    // tests select box\r\n    controls_div.appendChild(document.createTextNode(\"Tests\"));\r\n    controls_div.appendChild(document.createElement(\"br\"));\r\n    const test_select: HTMLSelectElement = document.createElement(\"select\");\r\n    const test_options: HTMLOptionElement[] = [];\r\n    for (let i: number = 0; i < g_testEntries.length; ++i) {\r\n      const option: HTMLOptionElement = document.createElement(\"option\");\r\n      option.text = `${g_testEntries[i].category}:${g_testEntries[i].name}`;\r\n      option.value = i.toString();\r\n      test_options.push(option);\r\n    }\r\n    test_options.sort((a: HTMLOptionElement, b: HTMLOptionElement) => a.text.localeCompare(b.text));\r\n    for (let i: number = 0; i < test_options.length; ++i) {\r\n      const option: HTMLOptionElement = test_options[i];\r\n      test_select.add(option);\r\n    }\r\n    test_select.selectedIndex = this.m_settings.m_testIndex = 0;\r\n    test_select.addEventListener(\"change\", (e: Event): void => {\r\n      this.m_settings.m_testIndex = test_select.selectedIndex;\r\n      this.LoadTest();\r\n    });\r\n    controls_div.appendChild(test_select);\r\n    this.m_test_select = test_select;\r\n    this.m_test_options = test_options;\r\n    controls_div.appendChild(document.createElement(\"br\"));\r\n\r\n    controls_div.appendChild(document.createElement(\"hr\"));\r\n\r\n    // simulation number inputs\r\n    function connect_number_input(parent: Node, label: string, init: number, update: (value: number) => void, min: number, max: number, step: number): HTMLInputElement {\r\n      const number_input_tr: HTMLTableRowElement = parent.appendChild(document.createElement(\"tr\"));\r\n      const number_input_td0: HTMLTableDataCellElement = number_input_tr.appendChild(document.createElement(\"td\"));\r\n      number_input_td0.align = \"right\";\r\n      number_input_td0.appendChild(document.createTextNode(label));\r\n      const number_input_td1: HTMLTableDataCellElement = number_input_tr.appendChild(document.createElement(\"td\"));\r\n      const number_input: HTMLInputElement = document.createElement(\"input\");\r\n      number_input.size = 8;\r\n      number_input.min = min.toString();\r\n      number_input.max = max.toString();\r\n      number_input.step = step.toString();\r\n      number_input.value = init.toString();\r\n      number_input.addEventListener(\"change\", (e: Event): void => {\r\n        update(parseInt(number_input.value, 10));\r\n      });\r\n      number_input_td1.appendChild(number_input);\r\n      return number_input;\r\n    }\r\n\r\n    const number_input_table: HTMLTableElement = controls_div.appendChild(document.createElement(\"table\"));\r\n    connect_number_input(number_input_table, \"Vel Iters\", this.m_settings.m_velocityIterations, (value: number): void => { this.m_settings.m_velocityIterations = value; }, 1, 20, 1);\r\n    connect_number_input(number_input_table, \"Pos Iters\", this.m_settings.m_positionIterations, (value: number): void => { this.m_settings.m_positionIterations = value; }, 1, 20, 1);\r\n    // #if B2_ENABLE_PARTICLE\r\n    connect_number_input(number_input_table, \"Pcl Iters\", this.m_settings.m_particleIterations, (value: number): void => { this.m_settings.m_particleIterations = value; }, 1, 100, 1);\r\n    // #endif\r\n    connect_number_input(number_input_table, \"Hertz\", this.m_settings.m_hertz, (value: number): void => { this.m_settings.m_hertz = value; }, 10, 120, 1);\r\n\r\n    // simulation checkbox inputs\r\n    function connect_checkbox_input(parent: Node, label: string, init: boolean, update: (value: boolean) => void): HTMLInputElement {\r\n      const checkbox_input: HTMLInputElement = document.createElement(\"input\");\r\n      checkbox_input.type = \"checkbox\";\r\n      checkbox_input.checked = init;\r\n      checkbox_input.addEventListener(\"click\", (e: MouseEvent): void => {\r\n        update(checkbox_input.checked);\r\n      });\r\n      parent.appendChild(checkbox_input);\r\n      parent.appendChild(document.createTextNode(label));\r\n      parent.appendChild(document.createElement(\"br\"));\r\n      return checkbox_input;\r\n    }\r\n\r\n    connect_checkbox_input(controls_div, \"Sleep\", this.m_settings.m_enableSleep, (value: boolean): void => { this.m_settings.m_enableSleep = value; });\r\n    connect_checkbox_input(controls_div, \"Warm Starting\", this.m_settings.m_enableWarmStarting, (value: boolean): void => { this.m_settings.m_enableWarmStarting = value; });\r\n    connect_checkbox_input(controls_div, \"Time of Impact\", this.m_settings.m_enableContinuous, (value: boolean): void => { this.m_settings.m_enableContinuous = value; });\r\n    connect_checkbox_input(controls_div, \"Sub-Stepping\", this.m_settings.m_enableSubStepping, (value: boolean): void => { this.m_settings.m_enableSubStepping = value; });\r\n    // #if B2_ENABLE_PARTICLE\r\n    connect_checkbox_input(controls_div, \"Strict Particle/Body Contacts\", this.m_settings.m_strictContacts, (value: boolean): void => { this.m_settings.m_strictContacts = value; });\r\n    // #endif\r\n\r\n    // draw checkbox inputs\r\n    const draw_fieldset: HTMLFieldSetElement = controls_div.appendChild(document.createElement(\"fieldset\"));\r\n    const draw_legend: HTMLLegendElement = draw_fieldset.appendChild(document.createElement(\"legend\"));\r\n    draw_legend.appendChild(document.createTextNode(\"Draw\"));\r\n    connect_checkbox_input(draw_fieldset, \"Shapes\", this.m_settings.m_drawShapes, (value: boolean): void => { this.m_settings.m_drawShapes = value; });\r\n    // #if B2_ENABLE_PARTICLE\r\n    connect_checkbox_input(draw_fieldset, \"Particles\", this.m_settings.m_drawParticles, (value: boolean): void => { this.m_settings.m_drawParticles = value; });\r\n    // #endif\r\n    connect_checkbox_input(draw_fieldset, \"Joints\", this.m_settings.m_drawJoints, (value: boolean): void => { this.m_settings.m_drawJoints = value; });\r\n    connect_checkbox_input(draw_fieldset, \"AABBs\", this.m_settings.m_drawAABBs, (value: boolean): void => { this.m_settings.m_drawAABBs = value; });\r\n    connect_checkbox_input(draw_fieldset, \"Contact Points\", this.m_settings.m_drawContactPoints, (value: boolean): void => { this.m_settings.m_drawContactPoints = value; });\r\n    connect_checkbox_input(draw_fieldset, \"Contact Normals\", this.m_settings.m_drawContactNormals, (value: boolean): void => { this.m_settings.m_drawContactNormals = value; });\r\n    connect_checkbox_input(draw_fieldset, \"Contact Impulses\", this.m_settings.m_drawContactImpulse, (value: boolean): void => { this.m_settings.m_drawContactImpulse = value; });\r\n    connect_checkbox_input(draw_fieldset, \"Friction Impulses\", this.m_settings.m_drawFrictionImpulse, (value: boolean): void => { this.m_settings.m_drawFrictionImpulse = value; });\r\n    connect_checkbox_input(draw_fieldset, \"Center of Masses\", this.m_settings.m_drawCOMs, (value: boolean): void => { this.m_settings.m_drawCOMs = value; });\r\n    connect_checkbox_input(draw_fieldset, \"Statistics\", this.m_settings.m_drawStats, (value: boolean): void => { this.m_settings.m_drawStats = value; });\r\n    connect_checkbox_input(draw_fieldset, \"Profile\", this.m_settings.m_drawProfile, (value: boolean): void => { this.m_settings.m_drawProfile = value; });\r\n\r\n    // simulation buttons\r\n    function connect_button_input(parent: Node, label: string, callback: (e: MouseEvent) => void): HTMLInputElement {\r\n      const button_input: HTMLInputElement = document.createElement(\"input\");\r\n      button_input.type = \"button\";\r\n      button_input.style.width = \"120\";\r\n      button_input.value = label;\r\n      button_input.addEventListener(\"click\", callback);\r\n      parent.appendChild(button_input);\r\n      parent.appendChild(document.createElement(\"br\"));\r\n      return button_input;\r\n    }\r\n\r\n    const button_div: HTMLDivElement = controls_div.appendChild(document.createElement(\"div\"));\r\n    button_div.align = \"center\";\r\n    connect_button_input(button_div, \"Pause (P)\", (e: MouseEvent): void => { this.Pause(); });\r\n    connect_button_input(button_div, \"Single Step (O)\", (e: MouseEvent): void => { this.SingleStep(); });\r\n    connect_button_input(button_div, \"Restart (R)\", (e: MouseEvent): void => { this.LoadTest(); });\r\n    this.m_demo_button = connect_button_input(button_div, \"Demo\", (e: MouseEvent): void => { this.ToggleDemo(); });\r\n\r\n    // disable context menu to use right-click\r\n    window.addEventListener(\"contextmenu\", (e: MouseEvent): void => { e.preventDefault(); }, true);\r\n\r\n    canvas_div.addEventListener(\"mousemove\", (e: MouseEvent): void => { this.HandleMouseMove(e); });\r\n    canvas_div.addEventListener(\"mousedown\", (e: MouseEvent): void => { this.HandleMouseDown(e); });\r\n    canvas_div.addEventListener(\"mouseup\", (e: MouseEvent): void => { this.HandleMouseUp(e); });\r\n    canvas_div.addEventListener(\"mousewheel\", (e: Event): void => { this.HandleMouseWheel(e as MouseWheelEvent); });\r\n\r\n    canvas_div.addEventListener(\"touchmove\", (e: TouchEvent): void => { this.HandleTouchMove(e); });\r\n    canvas_div.addEventListener(\"touchstart\", (e: TouchEvent): void => { this.HandleTouchStart(e); });\r\n    canvas_div.addEventListener(\"touchend\", (e: TouchEvent): void => { this.HandleTouchEnd(e); });\r\n\r\n    window.addEventListener(\"keydown\", (e: KeyboardEvent): void => { this.HandleKeyDown(e); });\r\n    window.addEventListener(\"keyup\", (e: KeyboardEvent): void => { this.HandleKeyUp(e); });\r\n\r\n    this.LoadTest();\r\n\r\n    this.m_time_last = time;\r\n  }\r\n\r\n  public HomeCamera(): void {\r\n    g_camera.m_zoom = (this.m_test) ? (this.m_test.GetDefaultViewZoom()) : (1.0);\r\n    g_camera.m_center.Set(0, 20 * g_camera.m_zoom);\r\n    ///g_camera.m_roll.SetAngle(b2.DegToRad(0));\r\n  }\r\n\r\n  public MoveCamera(move: b2.Vec2): void {\r\n    const position: b2.Vec2 = g_camera.m_center.Clone();\r\n    ///move.SelfRotate(g_camera.m_roll.GetAngle());\r\n    position.SelfAdd(move);\r\n    g_camera.m_center.Copy(position);\r\n  }\r\n\r\n  ///public RollCamera(roll: number): void {\r\n  ///  const angle: number = g_camera.m_roll.GetAngle();\r\n  ///  g_camera.m_roll.SetAngle(angle + roll);\r\n  ///}\r\n\r\n  public ZoomCamera(zoom: number): void {\r\n    g_camera.m_zoom *= zoom;\r\n    g_camera.m_zoom = b2.Clamp(g_camera.m_zoom, 0.02, 20);\r\n  }\r\n\r\n  private m_mouse = new b2.Vec2();\r\n\r\n  public HandleMouseMove(e: MouseEvent): void {\r\n    const element: b2.Vec2 = new b2.Vec2(e.clientX, e.clientY);\r\n    const world: b2.Vec2 = g_camera.ConvertScreenToWorld(element, new b2.Vec2());\r\n\r\n    this.m_mouse.Copy(element);\r\n\r\n    if (this.m_lMouseDown) {\r\n      if (this.m_test) { this.m_test.MouseMove(world); }\r\n    }\r\n\r\n    if (this.m_rMouseDown) {\r\n      // m_center = viewCenter0 - (projection - projection0);\r\n      const projection: b2.Vec2 = g_camera.ConvertElementToProjection(element, new b2.Vec2());\r\n      const diff: b2.Vec2 = b2.Vec2.SubVV(projection, this.m_projection0, new b2.Vec2());\r\n      const center: b2.Vec2 = b2.Vec2.SubVV(this.m_viewCenter0, diff, new b2.Vec2());\r\n      g_camera.m_center.Copy(center);\r\n    }\r\n  }\r\n\r\n  public HandleMouseDown(e: MouseEvent): void {\r\n    const element: b2.Vec2 = new b2.Vec2(e.clientX, e.clientY);\r\n    const world: b2.Vec2 = g_camera.ConvertScreenToWorld(element, new b2.Vec2());\r\n\r\n    switch (e.which) {\r\n    case 1: // left mouse button\r\n      this.m_lMouseDown = true;\r\n      if (this.m_shift) {\r\n        if (this.m_test) { this.m_test.ShiftMouseDown(world); }\r\n      } else {\r\n        if (this.m_test) { this.m_test.MouseDown(world); }\r\n      }\r\n      break;\r\n    case 3: // right mouse button\r\n      this.m_rMouseDown = true;\r\n      const projection: b2.Vec2 = g_camera.ConvertElementToProjection(element, new b2.Vec2());\r\n      this.m_projection0.Copy(projection);\r\n      this.m_viewCenter0.Copy(g_camera.m_center);\r\n      break;\r\n    }\r\n  }\r\n\r\n  public HandleMouseUp(e: MouseEvent): void {\r\n    const element: b2.Vec2 = new b2.Vec2(e.clientX, e.clientY);\r\n    const world: b2.Vec2 = g_camera.ConvertScreenToWorld(element, new b2.Vec2());\r\n\r\n    switch (e.which) {\r\n    case 1: // left mouse button\r\n      this.m_lMouseDown = false;\r\n      if (this.m_test) { this.m_test.MouseUp(world); }\r\n      break;\r\n    case 3: // right mouse button\r\n      this.m_rMouseDown = false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  public HandleTouchMove(e: TouchEvent): void {\r\n    const element: b2.Vec2 = new b2.Vec2(e.touches[0].clientX, e.touches[0].clientY);\r\n    const world: b2.Vec2 = g_camera.ConvertScreenToWorld(element, new b2.Vec2());\r\n    if (this.m_test) { this.m_test.MouseMove(world); }\r\n    e.preventDefault();\r\n  }\r\n\r\n  public HandleTouchStart(e: TouchEvent): void {\r\n    const element: b2.Vec2 = new b2.Vec2(e.touches[0].clientX, e.touches[0].clientY);\r\n    const world: b2.Vec2 = g_camera.ConvertScreenToWorld(element, new b2.Vec2());\r\n    if (this.m_test) { this.m_test.MouseDown(world); }\r\n    e.preventDefault();\r\n  }\r\n\r\n  public HandleTouchEnd(e: TouchEvent): void {\r\n    if (this.m_test) { this.m_test.MouseUp(this.m_test.m_mouseWorld); }\r\n    e.preventDefault();\r\n  }\r\n\r\n  public HandleMouseWheel(e: MouseWheelEvent): void {\r\n    if (e.deltaY > 0) {\r\n      this.ZoomCamera(1 / 1.1);\r\n    } else if (e.deltaY < 0) {\r\n      this.ZoomCamera(1.1);\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  public HandleKeyDown(e: KeyboardEvent): void {\r\n    switch (e.key) {\r\n    case \"Control\":\r\n      this.m_ctrl = true;\r\n      break;\r\n    case \"Shift\":\r\n      this.m_shift = true;\r\n      break;\r\n    case \"ArrowLeft\":\r\n      if (this.m_ctrl) {\r\n        if (this.m_test) {\r\n          this.m_test.ShiftOrigin(new b2.Vec2(2, 0));\r\n        }\r\n      } else {\r\n        this.MoveCamera(new b2.Vec2(-0.5, 0));\r\n      }\r\n      break;\r\n    case \"ArrowRight\":\r\n      if (this.m_ctrl) {\r\n        if (this.m_test) {\r\n          this.m_test.ShiftOrigin(new b2.Vec2(-2, 0));\r\n        }\r\n      } else {\r\n        this.MoveCamera(new b2.Vec2(0.5, 0));\r\n      }\r\n      break;\r\n    case \"ArrowDown\":\r\n      if (this.m_ctrl) {\r\n        if (this.m_test) {\r\n          this.m_test.ShiftOrigin(new b2.Vec2(0, 2));\r\n        }\r\n      } else {\r\n        this.MoveCamera(new b2.Vec2(0, -0.5));\r\n      }\r\n      break;\r\n    case \"ArrowUp\":\r\n      if (this.m_ctrl) {\r\n        if (this.m_test) {\r\n          this.m_test.ShiftOrigin(new b2.Vec2(0, -2));\r\n        }\r\n      } else {\r\n        this.MoveCamera(new b2.Vec2(0, 0.5));\r\n      }\r\n      break;\r\n    case \"Home\":\r\n      this.HomeCamera();\r\n      break;\r\n    ///case \"PageUp\":\r\n    ///  this.RollCamera(b2.DegToRad(-1));\r\n    ///  break;\r\n    ///case \"PageDown\":\r\n    ///  this.RollCamera(b2.DegToRad(1));\r\n    ///  break;\r\n    case \"z\":\r\n      this.ZoomCamera(1.1);\r\n      break;\r\n    case \"x\":\r\n      this.ZoomCamera(0.9);\r\n      break;\r\n    case \"r\":\r\n      this.LoadTest();\r\n      break;\r\n    case \" \":\r\n      if (this.m_test) {\r\n        this.m_test.LaunchBomb();\r\n      }\r\n      break;\r\n    case \"o\":\r\n      this.SingleStep();\r\n      break;\r\n    case \"p\":\r\n      this.Pause();\r\n      break;\r\n    case \"[\":\r\n      this.DecrementTest();\r\n      break;\r\n    case \"]\":\r\n      this.IncrementTest();\r\n      break;\r\n    // #if B2_ENABLE_PARTICLE\r\n    case \",\":\r\n      if (this.m_shift) {\r\n        // Press < to select the previous particle parameter setting.\r\n        Test.particleParameter.Decrement();\r\n      }\r\n      break;\r\n    case \".\":\r\n      if (this.m_shift) {\r\n        // Press > to select the next particle parameter setting.\r\n        Test.particleParameter.Increment();\r\n      }\r\n      break;\r\n    // #endif\r\n    default:\r\n      // console.log(e.keyCode);\r\n      break;\r\n    }\r\n\r\n    if (this.m_test) {\r\n      this.m_test.Keyboard(e.key);\r\n    }\r\n  }\r\n\r\n  public HandleKeyUp(e: KeyboardEvent): void {\r\n    switch (e.key) {\r\n    case \"Control\":\r\n      this.m_ctrl = false;\r\n      break;\r\n    case \"Shift\":\r\n      this.m_shift = false;\r\n      break;\r\n    default:\r\n      // console.log(e.keyCode);\r\n      break;\r\n    }\r\n\r\n    if (this.m_test) {\r\n      this.m_test.KeyboardUp(e.key);\r\n    }\r\n  }\r\n\r\n  public UpdateTest(time_elapsed: number): void {\r\n    if (this.m_demo_mode) {\r\n      this.m_demo_time += time_elapsed;\r\n\r\n      if (this.m_demo_time > this.m_max_demo_time) {\r\n        this.IncrementTest();\r\n      }\r\n\r\n      const str: string = ((500 + this.m_max_demo_time - this.m_demo_time) / 1000).toFixed(0).toString();\r\n      this.m_demo_button.value = str;\r\n    } else {\r\n      this.m_demo_button.value = \"Demo\";\r\n    }\r\n  }\r\n\r\n  public DecrementTest(): void {\r\n    if (this.m_settings.m_testIndex <= 0) {\r\n      this.m_settings.m_testIndex = this.m_test_options.length;\r\n    }\r\n    this.m_settings.m_testIndex--;\r\n    this.m_test_select.selectedIndex = this.m_settings.m_testIndex;\r\n    this.LoadTest();\r\n  }\r\n\r\n  public IncrementTest(): void {\r\n    this.m_settings.m_testIndex++;\r\n    if (this.m_settings.m_testIndex >= this.m_test_options.length) {\r\n      this.m_settings.m_testIndex = 0;\r\n    }\r\n    this.m_test_select.selectedIndex = this.m_settings.m_testIndex;\r\n    this.LoadTest();\r\n  }\r\n\r\n  public LoadTest(restartTest: boolean = false): void {\r\n    // #if B2_ENABLE_PARTICLE\r\n    Test.fullscreenUI.Reset();\r\n    if (!restartTest) { Test.particleParameter.Reset(); }\r\n    // #endif\r\n    this.m_demo_time = 0;\r\n    // #if B2_ENABLE_PARTICLE\r\n    if (this.m_test) {\r\n      this.m_test.RestoreParticleParameters();\r\n    }\r\n    // #endif\r\n    this.m_test = g_testEntries[parseInt(this.m_test_options[this.m_settings.m_testIndex].value)].createFcn();\r\n    if (!restartTest) {\r\n      this.HomeCamera();\r\n    }\r\n  }\r\n\r\n  public Pause(): void {\r\n    this.m_settings.m_pause = !this.m_settings.m_pause;\r\n  }\r\n\r\n  public SingleStep(): void {\r\n    this.m_settings.m_pause = true;\r\n    this.m_settings.m_singleStep = true;\r\n  }\r\n\r\n  public ToggleDemo(): void {\r\n    this.m_demo_mode = !this.m_demo_mode;\r\n  }\r\n\r\n  public SimulationLoop(time: number): void {\r\n    this.m_time_last = this.m_time_last || time;\r\n\r\n    let time_elapsed: number = time - this.m_time_last;\r\n    this.m_time_last = time;\r\n\r\n    if (time_elapsed > 1000) { time_elapsed = 1000; } // clamp\r\n\r\n    this.m_fps_time += time_elapsed;\r\n    this.m_fps_frames++;\r\n\r\n    if (this.m_fps_time >= 500) {\r\n      this.m_fps = (this.m_fps_frames * 1000) / this.m_fps_time;\r\n      this.m_fps_frames = 0;\r\n      this.m_fps_time = 0;\r\n\r\n      this.m_fps_div.innerHTML = this.m_fps.toFixed(1).toString();\r\n    }\r\n\r\n    if (time_elapsed > 0) {\r\n      const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n\r\n      // #if B2_ENABLE_PARTICLE\r\n      const restartTest = [false];\r\n      // #endif\r\n\r\n      if (ctx) {\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n        // ctx.strokeStyle = \"blue\";\r\n        // ctx.strokeRect(this.m_mouse.x - 24, this.m_mouse.y - 24, 48, 48);\r\n\r\n        // const mouse_world: b2.Vec2 = g_camera.ConvertScreenToWorld(this.m_mouse, new b2.Vec2());\r\n\r\n        ctx.save();\r\n\r\n          // 0,0 at center of canvas, x right, y up\r\n        ctx.translate(0.5 * ctx.canvas.width, 0.5 * ctx.canvas.height);\r\n        ctx.scale(1, -1);\r\n          ///ctx.scale(g_camera.m_extent, g_camera.m_extent);\r\n          ///ctx.lineWidth /= g_camera.m_extent;\r\n        const s: number = 0.5 * g_camera.m_height / g_camera.m_extent;\r\n        ctx.scale(s, s);\r\n        ctx.lineWidth /= s;\r\n\r\n          // apply camera\r\n        ctx.scale(1 / g_camera.m_zoom, 1 / g_camera.m_zoom);\r\n        ctx.lineWidth *= g_camera.m_zoom;\r\n          ///ctx.rotate(-g_camera.m_roll.GetAngle());\r\n        ctx.translate(-g_camera.m_center.x, -g_camera.m_center.y);\r\n\r\n        if (this.m_test) { this.m_test.Step(this.m_settings); }\r\n\r\n        // #if B2_ENABLE_PARTICLE\r\n        // Update the state of the particle parameter.\r\n        Test.particleParameter.Changed(restartTest);\r\n        // #endif\r\n\r\n        // #if B2_ENABLE_PARTICLE\r\n        let msg = this.m_test_options[this.m_settings.m_testIndex].text;\r\n        if (Test.fullscreenUI.GetParticleParameterSelectionEnabled()) {\r\n          msg += \" : \";\r\n          msg += Test.particleParameter.GetName();\r\n        }\r\n        if (this.m_test) { this.m_test.DrawTitle(msg); }\r\n        // #else\r\n        // if (this.m_test) { this.m_test.DrawTitle(this.m_test_options[this.m_settings.m_testIndex].text); }\r\n        // #endif\r\n\r\n        // ctx.strokeStyle = \"yellow\";\r\n        // ctx.strokeRect(mouse_world.x - 0.5, mouse_world.y - 0.5, 1.0, 1.0);\r\n\r\n        ctx.restore();\r\n      }\r\n\r\n      // #if B2_ENABLE_PARTICLE\r\n      if (restartTest[0]) {\r\n        this.LoadTest(true);\r\n      }\r\n      // #endif\r\n\r\n      this.UpdateTest(time_elapsed);\r\n    }\r\n  }\r\n}\r\n\r\nimport \"./tests/box_stack.js\"\r\n"],"names":["b2","ParticleParameterOptions","testbed.Test","testbed.g_debugDraw","testbed.DRAW_STRING_NEW_LINE","testbed.RegisterTest"],"mappings":"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"}