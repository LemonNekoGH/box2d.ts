{"version":3,"file":"testbed.umd.js","sources":["../settings.ts","../draw.ts","../../build/common/b2_draw.js","../test.ts","../tests/box_stack.ts","../main.ts"],"sourcesContent":["// MIT License\r\n\r\n// Copyright (c) 2019 Erin Catto\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\nimport * as b2 from \"@box2d\";\r\n\r\nexport class Settings {\r\n  public m_testIndex: number = 0;\r\n  public m_windowWidth: number = 1600;\r\n  public m_windowHeight: number = 900;\r\n  public m_hertz: number = 60;\r\n  public m_velocityIterations: number = 8;\r\n  public m_positionIterations: number = 3;\r\n  // #if B2_ENABLE_PARTICLE\r\n  // Particle iterations are needed for numerical stability in particle\r\n  // simulations with small particles and relatively high gravity.\r\n  // b2CalculateParticleIterations helps to determine the number.\r\n  public m_particleIterations: number = b2.CalculateParticleIterations(10, 0.04, 1 / this.m_hertz);\r\n  // #endif\r\n  public m_drawShapes: boolean = true;\r\n  public m_enableWarmStarting: boolean = true;\r\n  public m_enableContinuous: boolean = true;\r\n  public m_enableSubStepping: boolean = false;\r\n  public m_enableSleep: boolean = true;\r\n  public m_pause: boolean = false;\r\n  public m_singleStep: boolean = false;\r\n  // #if B2_ENABLE_PARTICLE\r\n  public m_strictContacts: boolean = false;\r\n  // #endif\r\n\r\n  public Reset(): void {\r\n    this.m_testIndex = 0;\r\n    this.m_windowWidth = 1600;\r\n    this.m_windowHeight = 900;\r\n    this.m_hertz = 60;\r\n    this.m_velocityIterations = 8;\r\n    this.m_positionIterations = 3;\r\n    // #if B2_ENABLE_PARTICLE\r\n    // Particle iterations are needed for numerical stability in particle\r\n    // simulations with small particles and relatively high gravity.\r\n    // b2CalculateParticleIterations helps to determine the number.\r\n    this.m_particleIterations = b2.CalculateParticleIterations(10, 0.04, 1 / this.m_hertz);\r\n    // #endif\r\n    this.m_drawShapes = true;\r\n    this.m_enableWarmStarting = true;\r\n    this.m_enableContinuous = true;\r\n    this.m_enableSubStepping = false;\r\n    this.m_enableSleep = true;\r\n    this.m_pause = false;\r\n    this.m_singleStep = false;\r\n    // #if B2_ENABLE_PARTICLE\r\n    this.m_strictContacts = false;\r\n    // #endif\r\n  }\r\n\r\n  public Save(): void { }\r\n  public Load(): void { }\r\n}\r\n","// MIT License\r\n\r\n// Copyright (c) 2019 Erin Catto\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\nimport * as b2 from \"@box2d\";\r\n\r\nexport class Camera {\r\n  public readonly m_center: b2.Vec2 = new b2.Vec2(0, 20);\r\n  ///public readonly m_roll: b2.Rot = new b2.Rot(b2.DegToRad(0));\r\n  public m_extent: number = 25;\r\n  public m_zoom: number = 1;\r\n  public m_width: number = 1280;\r\n  public m_height: number = 800;\r\n}\r\n\r\n// This class implements debug drawing callbacks that are invoked\r\n// inside b2World::Step.\r\nexport class DebugDraw extends b2.Draw {\r\n  public m_ctx: CanvasRenderingContext2D | null = null;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public PushTransform(xf: b2.Transform): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.save();\r\n      ctx.translate(xf.p.x, xf.p.y);\r\n      ctx.rotate(xf.q.GetAngle());\r\n    }\r\n  }\r\n\r\n  public PopTransform(xf: b2.Transform): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  public DrawPolygon(vertices: b2.Vec2[], vertexCount: number, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(vertices[0].x, vertices[0].y);\r\n      for (let i: number = 1; i < vertexCount; i++) {\r\n        ctx.lineTo(vertices[i].x, vertices[i].y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.strokeStyle = color.MakeStyleString(1);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  public DrawSolidPolygon(vertices: b2.Vec2[], vertexCount: number, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(vertices[0].x, vertices[0].y);\r\n      for (let i: number = 1; i < vertexCount; i++) {\r\n        ctx.lineTo(vertices[i].x, vertices[i].y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.fillStyle = color.MakeStyleString(0.5);\r\n      ctx.fill();\r\n      ctx.strokeStyle = color.MakeStyleString(1);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  public DrawCircle(center: b2.Vec2, radius: number, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.beginPath();\r\n      ctx.arc(center.x, center.y, radius, 0, b2.pi * 2, true);\r\n      ctx.strokeStyle = color.MakeStyleString(1);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  public DrawSolidCircle(center: b2.Vec2, radius: number, axis: b2.Vec2, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      const cx: number = center.x;\r\n      const cy: number = center.y;\r\n      ctx.beginPath();\r\n      ctx.arc(cx, cy, radius, 0, b2.pi * 2, true);\r\n      ctx.moveTo(cx, cy);\r\n      ctx.lineTo((cx + axis.x * radius), (cy + axis.y * radius));\r\n      ctx.fillStyle = color.MakeStyleString(0.5);\r\n      ctx.fill();\r\n      ctx.strokeStyle = color.MakeStyleString(1);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  // #if B2_ENABLE_PARTICLE\r\n  public DrawParticles(centers: b2.Vec2[], radius: number, colors: b2.Color[] | null, count: number) {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      if (colors !== null) {\r\n        for (let i = 0; i < count; ++i) {\r\n          const center = centers[i];\r\n          const color = colors[i];\r\n          ctx.fillStyle = color.MakeStyleString();\r\n          // ctx.fillRect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\r\n          ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, b2.pi * 2, true); ctx.fill();\r\n        }\r\n      } else {\r\n        ctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n        // ctx.beginPath();\r\n        for (let i = 0; i < count; ++i) {\r\n          const center = centers[i];\r\n          // ctx.rect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\r\n          ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, b2.pi * 2, true); ctx.fill();\r\n        }\r\n        // ctx.fill();\r\n      }\r\n    }\r\n  }\r\n  // #endif\r\n\r\n  public DrawSegment(p1: b2.Vec2, p2: b2.Vec2, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.strokeStyle = color.MakeStyleString(1);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  public DrawTransform(xf: b2.Transform): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      this.PushTransform(xf);\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, 0);\r\n      ctx.lineTo(1, 0);\r\n      ctx.strokeStyle = b2.Color.RED.MakeStyleString(1);\r\n      ctx.stroke();\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, 0);\r\n      ctx.lineTo(0, 1);\r\n      ctx.strokeStyle = b2.Color.GREEN.MakeStyleString(1);\r\n      ctx.stroke();\r\n\r\n      this.PopTransform(xf);\r\n    }\r\n  }\r\n\r\n  public DrawPoint(p: b2.Vec2, size: number, color: b2.Color): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.fillStyle = color.MakeStyleString();\r\n      size *= g_camera.m_zoom;\r\n      size /= g_camera.m_extent;\r\n      const hsize: number = size / 2;\r\n      ctx.fillRect(p.x - hsize, p.y - hsize, size, size);\r\n    }\r\n  }\r\n\r\n  private static DrawString_s_color: b2.Color = new b2.Color(0.9, 0.6, 0.6);\r\n  public DrawString(x: number, y: number, message: string): void {\r\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n    if (ctx) {\r\n      ctx.save();\r\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n      ctx.font = \"15px DroidSans\";\r\n      const color: b2.Color = DebugDraw.DrawString_s_color;\r\n      ctx.fillStyle = color.MakeStyleString();\r\n      ctx.fillText(message, x, y);\r\n      ctx.restore();\r\n    }\r\n  }\r\n}\r\n\r\nexport const g_debugDraw: DebugDraw = new DebugDraw();\r\nexport const g_camera: Camera = new Camera();\r\n","/*\r\n* Copyright (c) 2011 Erin Catto http://box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/// Color for debug drawing. Each value has the range [0,1].\r\nexport class b2Color {\r\n    constructor(r = 0.5, g = 0.5, b = 0.5, a = 1.0) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n    Clone() {\r\n        return new b2Color().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.r = other.r;\r\n        this.g = other.g;\r\n        this.b = other.b;\r\n        this.a = other.a;\r\n        return this;\r\n    }\r\n    IsEqual(color) {\r\n        return (this.r === color.r) && (this.g === color.g) && (this.b === color.b) && (this.a === color.a);\r\n    }\r\n    IsZero() {\r\n        return (this.r === 0) && (this.g === 0) && (this.b === 0) && (this.a === 0);\r\n    }\r\n    Set(r, g, b, a = this.a) {\r\n        this.SetRGBA(r, g, b, a);\r\n    }\r\n    SetByteRGB(r, g, b) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        return this;\r\n    }\r\n    SetByteRGBA(r, g, b, a) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        this.a = a / 0xff;\r\n        return this;\r\n    }\r\n    SetRGB(rr, gg, bb) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        return this;\r\n    }\r\n    SetRGBA(rr, gg, bb, aa) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        this.a = aa;\r\n        return this;\r\n    }\r\n    SelfAdd(color) {\r\n        this.r += color.r;\r\n        this.g += color.g;\r\n        this.b += color.b;\r\n        this.a += color.a;\r\n        return this;\r\n    }\r\n    Add(color, out) {\r\n        out.r = this.r + color.r;\r\n        out.g = this.g + color.g;\r\n        out.b = this.b + color.b;\r\n        out.a = this.a + color.a;\r\n        return out;\r\n    }\r\n    SelfSub(color) {\r\n        this.r -= color.r;\r\n        this.g -= color.g;\r\n        this.b -= color.b;\r\n        this.a -= color.a;\r\n        return this;\r\n    }\r\n    Sub(color, out) {\r\n        out.r = this.r - color.r;\r\n        out.g = this.g - color.g;\r\n        out.b = this.b - color.b;\r\n        out.a = this.a - color.a;\r\n        return out;\r\n    }\r\n    SelfMul(s) {\r\n        this.r *= s;\r\n        this.g *= s;\r\n        this.b *= s;\r\n        this.a *= s;\r\n        return this;\r\n    }\r\n    Mul(s, out) {\r\n        out.r = this.r * s;\r\n        out.g = this.g * s;\r\n        out.b = this.b * s;\r\n        out.a = this.a * s;\r\n        return out;\r\n    }\r\n    Mix(mixColor, strength) {\r\n        b2Color.MixColors(this, mixColor, strength);\r\n    }\r\n    static MixColors(colorA, colorB, strength) {\r\n        const dr = (strength * (colorB.r - colorA.r));\r\n        const dg = (strength * (colorB.g - colorA.g));\r\n        const db = (strength * (colorB.b - colorA.b));\r\n        const da = (strength * (colorB.a - colorA.a));\r\n        colorA.r += dr;\r\n        colorA.g += dg;\r\n        colorA.b += db;\r\n        colorA.a += da;\r\n        colorB.r -= dr;\r\n        colorB.g -= dg;\r\n        colorB.b -= db;\r\n        colorB.a -= da;\r\n    }\r\n    MakeStyleString(alpha = this.a) {\r\n        return b2Color.MakeStyleString(this.r, this.g, this.b, alpha);\r\n    }\r\n    static MakeStyleString(r, g, b, a = 1.0) {\r\n        // function clamp(x: number, lo: number, hi: number) { return x < lo ? lo : hi < x ? hi : x; }\r\n        r *= 255; // r = clamp(r, 0, 255);\r\n        g *= 255; // g = clamp(g, 0, 255);\r\n        b *= 255; // b = clamp(b, 0, 255);\r\n        // a = clamp(a, 0, 1);\r\n        if (a < 1) {\r\n            return `rgba(${r},${g},${b},${a})`;\r\n        }\r\n        else {\r\n            return `rgb(${r},${g},${b})`;\r\n        }\r\n    }\r\n}\r\nb2Color.ZERO = new b2Color(0, 0, 0, 0);\r\nb2Color.RED = new b2Color(1, 0, 0);\r\nb2Color.GREEN = new b2Color(0, 1, 0);\r\nb2Color.BLUE = new b2Color(0, 0, 1);\r\nexport class b2TypedColor {\r\n    constructor(...args) {\r\n        if (args[0] instanceof Float32Array) {\r\n            if (args[0].length !== 4) {\r\n                throw new Error();\r\n            }\r\n            this.data = args[0];\r\n        }\r\n        else {\r\n            const rr = typeof args[0] === \"number\" ? args[0] : 0.5;\r\n            const gg = typeof args[1] === \"number\" ? args[1] : 0.5;\r\n            const bb = typeof args[2] === \"number\" ? args[2] : 0.5;\r\n            const aa = typeof args[3] === \"number\" ? args[3] : 1.0;\r\n            this.data = new Float32Array([rr, gg, bb, aa]);\r\n        }\r\n    }\r\n    get r() { return this.data[0]; }\r\n    set r(value) { this.data[0] = value; }\r\n    get g() { return this.data[1]; }\r\n    set g(value) { this.data[1] = value; }\r\n    get b() { return this.data[2]; }\r\n    set b(value) { this.data[2] = value; }\r\n    get a() { return this.data[3]; }\r\n    set a(value) { this.data[3] = value; }\r\n    Clone() {\r\n        return new b2TypedColor(new Float32Array(this.data));\r\n    }\r\n    Copy(other) {\r\n        if (other instanceof b2TypedColor) {\r\n            this.data.set(other.data);\r\n        }\r\n        else {\r\n            this.r = other.r;\r\n            this.g = other.g;\r\n            this.b = other.b;\r\n            this.a = other.a;\r\n        }\r\n        return this;\r\n    }\r\n    IsEqual(color) {\r\n        return (this.r === color.r) && (this.g === color.g) && (this.b === color.b) && (this.a === color.a);\r\n    }\r\n    IsZero() {\r\n        return (this.r === 0) && (this.g === 0) && (this.b === 0) && (this.a === 0);\r\n    }\r\n    Set(r, g, b, a = this.a) {\r\n        this.SetRGBA(r, g, b, a);\r\n    }\r\n    SetByteRGB(r, g, b) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        return this;\r\n    }\r\n    SetByteRGBA(r, g, b, a) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        this.a = a / 0xff;\r\n        return this;\r\n    }\r\n    SetRGB(rr, gg, bb) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        return this;\r\n    }\r\n    SetRGBA(rr, gg, bb, aa) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        this.a = aa;\r\n        return this;\r\n    }\r\n    SelfAdd(color) {\r\n        this.r += color.r;\r\n        this.g += color.g;\r\n        this.b += color.b;\r\n        this.a += color.a;\r\n        return this;\r\n    }\r\n    Add(color, out) {\r\n        out.r = this.r + color.r;\r\n        out.g = this.g + color.g;\r\n        out.b = this.b + color.b;\r\n        out.a = this.a + color.a;\r\n        return out;\r\n    }\r\n    SelfSub(color) {\r\n        this.r -= color.r;\r\n        this.g -= color.g;\r\n        this.b -= color.b;\r\n        this.a -= color.a;\r\n        return this;\r\n    }\r\n    Sub(color, out) {\r\n        out.r = this.r - color.r;\r\n        out.g = this.g - color.g;\r\n        out.b = this.b - color.b;\r\n        out.a = this.a - color.a;\r\n        return out;\r\n    }\r\n    SelfMul(s) {\r\n        this.r *= s;\r\n        this.g *= s;\r\n        this.b *= s;\r\n        this.a *= s;\r\n        return this;\r\n    }\r\n    Mul(s, out) {\r\n        out.r = this.r * s;\r\n        out.g = this.g * s;\r\n        out.b = this.b * s;\r\n        out.a = this.a * s;\r\n        return out;\r\n    }\r\n    Mix(mixColor, strength) {\r\n        b2Color.MixColors(this, mixColor, strength);\r\n    }\r\n    MakeStyleString(alpha = this.a) {\r\n        return b2Color.MakeStyleString(this.r, this.g, this.b, alpha);\r\n    }\r\n}\r\nexport var b2DrawFlags;\r\n(function (b2DrawFlags) {\r\n    b2DrawFlags[b2DrawFlags[\"e_none\"] = 0] = \"e_none\";\r\n    b2DrawFlags[b2DrawFlags[\"e_shapeBit\"] = 1] = \"e_shapeBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_jointBit\"] = 2] = \"e_jointBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_aabbBit\"] = 4] = \"e_aabbBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_pairBit\"] = 8] = \"e_pairBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_centerOfMassBit\"] = 16] = \"e_centerOfMassBit\";\r\n    // #if B2_ENABLE_PARTICLE\r\n    b2DrawFlags[b2DrawFlags[\"e_particleBit\"] = 32] = \"e_particleBit\";\r\n    // #endif\r\n    // #if B2_ENABLE_CONTROLLER\r\n    b2DrawFlags[b2DrawFlags[\"e_controllerBit\"] = 64] = \"e_controllerBit\";\r\n    // #endif\r\n    b2DrawFlags[b2DrawFlags[\"e_all\"] = 63] = \"e_all\";\r\n})(b2DrawFlags || (b2DrawFlags = {}));\r\n/// Implement and register this class with a b2World to provide debug drawing of physics\r\n/// entities in your game.\r\nexport class b2Draw {\r\n    constructor() {\r\n        this.m_drawFlags = 0;\r\n    }\r\n    SetFlags(flags) {\r\n        this.m_drawFlags = flags;\r\n    }\r\n    GetFlags() {\r\n        return this.m_drawFlags;\r\n    }\r\n    AppendFlags(flags) {\r\n        this.m_drawFlags |= flags;\r\n    }\r\n    ClearFlags(flags) {\r\n        this.m_drawFlags &= ~flags;\r\n    }\r\n}\r\n//# sourceMappingURL=b2_draw.js.map","// MIT License\r\n\r\n// Copyright (c) 2019 Erin Catto\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\nimport * as b2 from \"@box2d\";\r\nimport {Settings} from \"./settings.js\";\r\nimport {g_debugDraw} from \"./draw.js\";\r\nimport {b2DrawFlags} from \"../build/common/b2_draw\";\r\n\r\nexport const DRAW_STRING_NEW_LINE: number = 16;\r\n\r\nexport function RandomFloat(lo: number = -1, hi: number = 1) {\r\n  let r = Math.random();\r\n  r = (hi - lo) * r + lo;\r\n  return r;\r\n}\r\n\r\nexport class TestEntry {\r\n  public category: string = \"\";\r\n  public name: string = \"unknown\";\r\n  public createFcn: () => Test;\r\n\r\n  constructor(category: string, name: string, createFcn: () => Test) {\r\n    this.category = category;\r\n    this.name = name;\r\n    this.createFcn = createFcn;\r\n  }\r\n}\r\n\r\nexport const g_testEntries: TestEntry[] = []\r\n\r\nexport class ContactPoint {\r\n  public fixtureA!: b2.Fixture;\r\n  public fixtureB!: b2.Fixture;\r\n  public readonly normal: b2.Vec2 = new b2.Vec2();\r\n  public readonly position: b2.Vec2 = new b2.Vec2();\r\n  public state: b2.PointState = b2.PointState.b2_nullState;\r\n  public normalImpulse: number = 0;\r\n  public tangentImpulse: number = 0;\r\n  public separation: number = 0;\r\n}\r\n\r\nexport class Test extends b2.ContactListener {\r\n  public static readonly k_maxContactPoints: number = 2048;\r\n\r\n  public m_world: b2.World;\r\n  public m_bomb: b2.Body | null = null;\r\n  public m_textLine: number = 30;\r\n  public m_mouseJoint: b2.MouseJoint | null = null;\r\n  public readonly m_points: ContactPoint[] = b2.MakeArray(Test.k_maxContactPoints, (i) => new ContactPoint());\r\n  public m_pointCount: number = 0;\r\n  public readonly m_bombSpawnPoint: b2.Vec2 = new b2.Vec2();\r\n  public m_bombSpawning: boolean = false;\r\n  public readonly m_mouseWorld: b2.Vec2 = new b2.Vec2();\r\n  public m_stepCount: number = 0;\r\n  public readonly m_maxProfile: b2.Profile = new b2.Profile();\r\n  public readonly m_totalProfile: b2.Profile = new b2.Profile();\r\n  public m_groundBody: b2.Body;\r\n\r\n  constructor() {\r\n    super();\r\n    const gravity: b2.Vec2 = new b2.Vec2(0, -10);\r\n    this.m_world = new b2.World(gravity);\r\n    this.m_bomb = null;\r\n    this.m_textLine = 30;\r\n    this.m_mouseJoint = null;\r\n\r\n    this.m_world.SetContactListener(this);\r\n    this.m_world.SetDebugDraw(g_debugDraw);\r\n\r\n    const bodyDef: b2.BodyDef = new b2.BodyDef();\r\n    this.m_groundBody = this.m_world.CreateBody(bodyDef);\r\n  }\r\n\r\n  public BeginContact(contact: b2.Contact): void {}\r\n\r\n  public EndContact(contact: b2.Contact): void {}\r\n\r\n  private static PreSolve_s_state1: b2.PointState[] = [/*b2.maxManifoldPoints*/];\r\n  private static PreSolve_s_state2: b2.PointState[] = [/*b2.maxManifoldPoints*/];\r\n  private static PreSolve_s_worldManifold: b2.WorldManifold = new b2.WorldManifold();\r\n  public PreSolve(contact: b2.Contact, oldManifold: b2.Manifold): void {\r\n    const manifold: b2.Manifold = contact.GetManifold();\r\n\r\n    if (manifold.pointCount === 0) {\r\n      return;\r\n    }\r\n\r\n    const fixtureA: b2.Fixture | null = contact.GetFixtureA();\r\n    const fixtureB: b2.Fixture | null = contact.GetFixtureB();\r\n\r\n    const state1: b2.PointState[] = Test.PreSolve_s_state1;\r\n    const state2: b2.PointState[] = Test.PreSolve_s_state2;\r\n    b2.GetPointStates(state1, state2, oldManifold, manifold);\r\n\r\n    const worldManifold: b2.WorldManifold = Test.PreSolve_s_worldManifold;\r\n    contact.GetWorldManifold(worldManifold);\r\n\r\n    for (let i: number = 0; i < manifold.pointCount && this.m_pointCount < Test.k_maxContactPoints; ++i) {\r\n      const cp: ContactPoint = this.m_points[this.m_pointCount];\r\n      cp.fixtureA = fixtureA;\r\n      cp.fixtureB = fixtureB;\r\n      cp.position.Copy(worldManifold.points[i]);\r\n      cp.normal.Copy(worldManifold.normal);\r\n      cp.state = state2[i];\r\n      cp.normalImpulse = manifold.points[i].normalImpulse;\r\n      cp.tangentImpulse = manifold.points[i].tangentImpulse;\r\n      cp.separation = worldManifold.separations[i];\r\n      ++this.m_pointCount;\r\n    }\r\n  }\r\n\r\n  public PostSolve(contact: b2.Contact, impulse: b2.ContactImpulse): void {}\r\n\r\n  public Step(settings: Settings): void {\r\n    let timeStep = settings.m_hertz > 0 ? 1 / settings.m_hertz : 0;\r\n\r\n    if (settings.m_pause) {\r\n      if (settings.m_singleStep) {\r\n        settings.m_singleStep = false;\r\n      } else {\r\n        timeStep = 0;\r\n      }\r\n\r\n      g_debugDraw.DrawString(5, this.m_textLine, \"****PAUSED****\");\r\n      this.m_textLine += DRAW_STRING_NEW_LINE;\r\n    }\r\n\r\n    g_debugDraw.SetFlags(b2DrawFlags.e_shapeBit);\r\n\r\n    this.m_world.SetAllowSleeping(settings.m_enableSleep);\r\n    this.m_world.SetWarmStarting(settings.m_enableWarmStarting);\r\n    this.m_world.SetContinuousPhysics(settings.m_enableContinuous);\r\n    this.m_world.SetSubStepping(settings.m_enableSubStepping);\r\n\r\n    this.m_pointCount = 0;\r\n\r\n    this.m_world.Step(timeStep, settings.m_velocityIterations, settings.m_positionIterations);\r\n\r\n    this.m_world.DebugDraw();\r\n\r\n    if (timeStep > 0) {\r\n      ++this.m_stepCount;\r\n    }\r\n\r\n    // Track maximum profile times\r\n    {\r\n      const p = this.m_world.GetProfile();\r\n      this.m_maxProfile.step = b2.Max(this.m_maxProfile.step, p.step);\r\n      this.m_maxProfile.collide = b2.Max(this.m_maxProfile.collide, p.collide);\r\n      this.m_maxProfile.solve = b2.Max(this.m_maxProfile.solve, p.solve);\r\n      this.m_maxProfile.solveInit = b2.Max(this.m_maxProfile.solveInit, p.solveInit);\r\n      this.m_maxProfile.solveVelocity = b2.Max(this.m_maxProfile.solveVelocity, p.solveVelocity);\r\n      this.m_maxProfile.solvePosition = b2.Max(this.m_maxProfile.solvePosition, p.solvePosition);\r\n      this.m_maxProfile.solveTOI = b2.Max(this.m_maxProfile.solveTOI, p.solveTOI);\r\n      this.m_maxProfile.broadphase = b2.Max(this.m_maxProfile.broadphase, p.broadphase);\r\n\r\n      this.m_totalProfile.step += p.step;\r\n      this.m_totalProfile.collide += p.collide;\r\n      this.m_totalProfile.solve += p.solve;\r\n      this.m_totalProfile.solveInit += p.solveInit;\r\n      this.m_totalProfile.solveVelocity += p.solveVelocity;\r\n      this.m_totalProfile.solvePosition += p.solvePosition;\r\n      this.m_totalProfile.solveTOI += p.solveTOI;\r\n      this.m_totalProfile.broadphase += p.broadphase;\r\n    }\r\n\r\n    if (this.m_bombSpawning) {\r\n      const c: b2.Color = new b2.Color(0, 0, 1);\r\n      g_debugDraw.DrawPoint(this.m_bombSpawnPoint, 4, c);\r\n\r\n      c.SetRGB(0.8, 0.8, 0.8);\r\n      g_debugDraw.DrawSegment(this.m_mouseWorld, this.m_bombSpawnPoint, c);\r\n    }\r\n  }\r\n\r\n  public ShiftOrigin(newOrigin: b2.Vec2): void {\r\n    this.m_world.ShiftOrigin(newOrigin);\r\n  }\r\n\r\n  public GetDefaultViewZoom(): number {\r\n    return 1.0;\r\n  }\r\n\r\n  public static readonly k_ParticleColors: b2.Color[] = [\r\n    new b2.Color().SetByteRGBA(0xff, 0x00, 0x00, 0xff), // red\r\n    new b2.Color().SetByteRGBA(0x00, 0xff, 0x00, 0xff), // green\r\n    new b2.Color().SetByteRGBA(0x00, 0x00, 0xff, 0xff), // blue\r\n    new b2.Color().SetByteRGBA(0xff, 0x8c, 0x00, 0xff), // orange\r\n    new b2.Color().SetByteRGBA(0x00, 0xce, 0xd1, 0xff), // turquoise\r\n    new b2.Color().SetByteRGBA(0xff, 0x00, 0xff, 0xff), // magenta\r\n    new b2.Color().SetByteRGBA(0xff, 0xd7, 0x00, 0xff), // gold\r\n    new b2.Color().SetByteRGBA(0x00, 0xff, 0xff, 0xff), // cyan\r\n  ];\r\n\r\n  public static readonly k_ParticleColorsCount = Test.k_ParticleColors.length;\r\n\r\n  // #endif\r\n}\r\n","// MIT License\r\n\r\n// Copyright (c) 2019 Erin Catto\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\nimport * as b2 from \"@box2d\";\r\nimport * as testbed from \"@testbed\";\r\nimport {g_testEntries, TestEntry} from \"@testbed\";\r\n\r\nexport class BoxStack extends testbed.Test {\r\n  public static readonly e_columnCount = 1;\r\n  public static readonly e_rowCount = 15;\r\n\r\n  public m_bullet: b2.Body | null = null;\r\n  public m_bodies: b2.Body[];\r\n  public m_indices: number[];\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.m_bodies = new Array(BoxStack.e_rowCount * BoxStack.e_columnCount);\r\n    this.m_indices = new Array(BoxStack.e_rowCount * BoxStack.e_columnCount);\r\n\r\n    {\r\n      const bd = new b2.BodyDef();\r\n      const ground = this.m_world.CreateBody(bd);\r\n\r\n      const shape = new b2.EdgeShape();\r\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\r\n      ground.CreateFixture(shape, 0.0);\r\n\r\n      shape.SetTwoSided(new b2.Vec2(20.0, 0.0), new b2.Vec2(20.0, 20.0));\r\n      ground.CreateFixture(shape, 0.0);\r\n    }\r\n\r\n    const xs = [0.0, -10.0, -5.0, 5.0, 10.0];\r\n\r\n    for (let j = 0; j < BoxStack.e_columnCount; ++j) {\r\n      const shape = new b2.PolygonShape();\r\n      shape.SetAsBox(0.5, 0.5);\r\n\r\n      const fd = new b2.FixtureDef();\r\n      fd.shape = shape;\r\n      fd.density = 1.0;\r\n      fd.friction = 0.3;\r\n\r\n      for (let i = 0; i < BoxStack.e_rowCount; ++i) {\r\n        const bd = new b2.BodyDef();\r\n        bd.type = b2.BodyType.b2_dynamicBody;\r\n\r\n        const n = j * BoxStack.e_rowCount + i;\r\n        // DEBUG: b2.Assert(n < BoxStack.e_rowCount * BoxStack.e_columnCount);\r\n        this.m_indices[n] = n;\r\n        bd.userData = this.m_indices[n];\r\n\r\n        const x = 0.0;\r\n        //const x = b2.RandomRange(-0.02, 0.02);\r\n        //const x = i % 2 === 0 ? -0.01 : 0.01;\r\n        bd.position.Set(xs[j] + x, 0.55 + 1.1 * i);\r\n        const body = this.m_world.CreateBody(bd);\r\n\r\n        this.m_bodies[n] = body;\r\n\r\n        body.CreateFixture(fd);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static Create(): testbed.Test {\r\n    return new BoxStack();\r\n  }\r\n}\r\n\r\ng_testEntries.push(new TestEntry(\"Stacking\", \"Boxes\", BoxStack.Create));\r\n","// MIT License\r\n\r\n// Copyright (c) 2019 Erin Catto\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\nimport { Settings } from \"./settings.js\";\r\nimport { Test, g_testEntries } from \"./test.js\";\r\nimport { g_debugDraw, g_camera } from \"./draw.js\";\r\n\r\nexport class Main {\r\n  public m_time_last: number = 0;\r\n  public readonly m_settings: Settings = new Settings();\r\n  public m_test?: Test;\r\n  public m_shift: boolean = false;\r\n  public m_demo_time: number = 0;\r\n  public m_canvas_div: HTMLDivElement;\r\n  public m_canvas_2d: HTMLCanvasElement;\r\n  public m_ctx: CanvasRenderingContext2D | null = null\r\n\r\n  constructor(time: number) {\r\n    document.body.style.backgroundColor = \"rgba(51, 51, 51, 1.0)\";\r\n\r\n    const main_div: HTMLDivElement = document.body.appendChild(document.createElement(\"div\"));\r\n    main_div.style.position = \"absolute\"; // relative to document.body\r\n    main_div.style.left = \"0px\";\r\n    main_div.style.top = \"0px\";\r\n\r\n    function resize_main_div(): void {\r\n      // console.log(window.innerWidth + \"x\" + window.innerHeight);\r\n      main_div.style.width = window.innerWidth + \"px\";\r\n      main_div.style.height = window.innerHeight + \"px\";\r\n    }\r\n    window.addEventListener(\"resize\", (e: UIEvent): void => { resize_main_div(); });\r\n    window.addEventListener(\"orientationchange\", (e: Event): void => { resize_main_div(); });\r\n    resize_main_div();\r\n\r\n    const view_div: HTMLDivElement = main_div.appendChild(document.createElement(\"div\"));\r\n\r\n    const canvas_div: HTMLDivElement = this.m_canvas_div = view_div.appendChild(document.createElement(\"div\"));\r\n    canvas_div.style.position = \"absolute\"; // relative to view_div\r\n    canvas_div.style.left = \"0px\";\r\n    canvas_div.style.right = \"0px\";\r\n    canvas_div.style.top = \"0px\";\r\n    canvas_div.style.bottom = \"0px\";\r\n\r\n    const canvas_2d: HTMLCanvasElement = this.m_canvas_2d = canvas_div.appendChild(document.createElement(\"canvas\"));\r\n\r\n    function resize_canvas(): void {\r\n      ///console.log(canvas_div.clientWidth + \"x\" + canvas_div.clientHeight);\r\n      if (canvas_2d.width !== canvas_div.clientWidth) {\r\n        g_camera.m_width = canvas_2d.width = canvas_div.clientWidth;\r\n      }\r\n      if (canvas_2d.height !== canvas_div.clientHeight) {\r\n        g_camera.m_height = canvas_2d.height = canvas_div.clientHeight;\r\n      }\r\n    }\r\n    window.addEventListener(\"resize\", (e: UIEvent): void => { resize_canvas(); });\r\n    window.addEventListener(\"orientationchange\", (e: Event): void => { resize_canvas(); });\r\n    resize_canvas();\r\n\r\n    g_debugDraw.m_ctx = this.m_ctx = this.m_canvas_2d.getContext(\"2d\");\r\n\r\n    // simulation number inputs\r\n    // draw checkbox inputs\r\n    // simulation buttons\r\n    // disable context menu to use right-click\r\n    window.addEventListener(\"contextmenu\", (e: MouseEvent): void => { e.preventDefault(); }, true);\r\n\r\n    this.LoadTest();\r\n\r\n    this.m_time_last = time;\r\n  }\r\n\r\n  public HomeCamera(): void {\r\n    g_camera.m_zoom = (this.m_test) ? (this.m_test.GetDefaultViewZoom()) : (1.0);\r\n    g_camera.m_center.Set(0, 20 * g_camera.m_zoom);\r\n    ///g_camera.m_roll.SetAngle(b2.DegToRad(0));\r\n  }\r\n\r\n  public UpdateTest(time_elapsed: number): void {\r\n      this.m_demo_time += time_elapsed;\r\n  }\r\n\r\n  public LoadTest(restartTest: boolean = false): void {\r\n    this.m_demo_time = 0;\r\n    // #endif\r\n    this.m_test = g_testEntries[0].createFcn();\r\n    if (!restartTest) {\r\n      this.HomeCamera();\r\n    }\r\n  }\r\n\r\n  public SimulationLoop(time: number): void {\r\n    this.m_time_last = this.m_time_last || time;\r\n\r\n    let time_elapsed: number = time - this.m_time_last;\r\n    this.m_time_last = time;\r\n\r\n    if (time_elapsed > 1000) { time_elapsed = 1000; } // clamp\r\n\r\n    if (time_elapsed > 0) {\r\n      const ctx: CanvasRenderingContext2D | null = this.m_ctx;\r\n\r\n      // #if B2_ENABLE_PARTICLE\r\n      const restartTest = [false];\r\n      // #endif\r\n\r\n      if (ctx) {\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n        // ctx.strokeStyle = \"blue\";\r\n        // ctx.strokeRect(this.m_mouse.x - 24, this.m_mouse.y - 24, 48, 48);\r\n\r\n        // const mouse_world: b2.Vec2 = g_camera.ConvertScreenToWorld(this.m_mouse, new b2.Vec2());\r\n\r\n        ctx.save();\r\n\r\n          // 0,0 at center of canvas, x right, y up\r\n        ctx.translate(0.5 * ctx.canvas.width, 0.5 * ctx.canvas.height);\r\n        ctx.scale(1, -1);\r\n          ///ctx.scale(g_camera.m_extent, g_camera.m_extent);\r\n          ///ctx.lineWidth /= g_camera.m_extent;\r\n        const s: number = 0.5 * g_camera.m_height / g_camera.m_extent;\r\n        ctx.scale(s, s);\r\n        ctx.lineWidth /= s;\r\n\r\n          // apply camera\r\n        ctx.scale(1 / g_camera.m_zoom, 1 / g_camera.m_zoom);\r\n        ctx.lineWidth *= g_camera.m_zoom;\r\n          ///ctx.rotate(-g_camera.m_roll.GetAngle());\r\n        ctx.translate(-g_camera.m_center.x, -g_camera.m_center.y);\r\n\r\n        if (this.m_test) { this.m_test.Step(this.m_settings); }\r\n\r\n        ctx.restore();\r\n      }\r\n\r\n      // #if B2_ENABLE_PARTICLE\r\n      if (restartTest[0]) {\r\n        this.LoadTest(true);\r\n      }\r\n      // #endif\r\n\r\n      this.UpdateTest(time_elapsed);\r\n    }\r\n  }\r\n}\r\n\r\nimport \"./tests/box_stack.js\"\r\n"],"names":["b2","testbed.Test"],"mappings":"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"}